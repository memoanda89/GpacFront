{"ast":null,"code":"import _regeneratorRuntime from\"/Users/memopro/Documents/source/react/gpac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/memopro/Documents/source/react/gpac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/memopro/Documents/source/react/gpac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import ReactMapGL,{Marker,Popup}from\"react-map-gl\";import useMyStore from\"../../zustand\";import{Grid,Avatar}from\"@material-ui/core\";import LocationCity from'@material-ui/icons/LocationCity';var _useMyStore=_slicedToArray(useMyStore,1),objStore=_useMyStore[0];var MapCustom=function MapCustom(){var _useState=useState({latitude:40,longitude:-74.5,width:\"100vw\",height:\"100vh\",zoom:10}),_useState2=_slicedToArray(_useState,2),viewport=_useState2[0],setViewport=_useState2[1];var arraygpac=objStore(function(state){return state.gpacMapObject;});var getGpac=objStore(function(state){return state.getGapMap;});var zipCodeArray=objStore(function(state){return state.zipCode;});var getZipcode=objStore(function(state){return state.getZipCode;});var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),selectedPark=_useState4[0],setSelectedPark=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),ZipCodeSelected=_useState6[0],setSelectedZipCode=_useState6[1];useEffect(function(){var listener=function listener(e){if(e.key===\"Escape\"){setSelectedPark(undefined);}};_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getGpac();case 2:_context.next=4;return getZipcode();case 4:case\"end\":return _context.stop();}}},_callee);}))();window.addEventListener(\"keydown\",listener);console.log(zipCodeArray);return function(){window.removeEventListener(\"keydown\",listener);};},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ReactMapGL,Object.assign({},viewport,{mapboxApiAccessToken:\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\",mapStyle:\"mapbox://styles/mapbox/streets-v11\",onViewportChange:function onViewportChange(viewport){setViewport({latitude:viewport.altitude,longitude:viewport.longitude,width:\"100vw\",height:\"100vh\",zoom:viewport.zoom});}}),arraygpac.map(function(park){return/*#__PURE__*/React.createElement(Marker,{key:park.id,latitude:park.latitud,longitude:park.longitud},/*#__PURE__*/React.createElement(\"button\",{className:\"marker-btn\",onClick:function onClick(e){e.preventDefault();setSelectedPark(park);}},/*#__PURE__*/React.createElement(LocationCity,null)));}),selectedPark?/*#__PURE__*/React.createElement(Popup,{latitude:selectedPark.latitud,longitude:selectedPark.longitud,onClose:function onClose(){setSelectedPark(undefined);}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(\"h5\",null,selectedPark.name),/*#__PURE__*/React.createElement(\"h5\",null,\"Manager\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Avatar,null,\"OP\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:9},/*#__PURE__*/React.createElement(\"p\",null,selectedPark.zipCode)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(\"button\",null,\"Profile\"))))):null,zipCodeArray.records.map(function(zipCode){return/*#__PURE__*/React.createElement(Marker,{key:zipCode.datasetid,latitude:zipCode.fields.latitude,longitude:zipCode.fields.longitude},/*#__PURE__*/React.createElement(\"button\",{className:\"marker-btn\",onClick:function onClick(e){e.preventDefault();setSelectedZipCode(zipCode);}},/*#__PURE__*/React.createElement(LocationCity,null)));}),ZipCodeSelected?/*#__PURE__*/React.createElement(Popup,{latitude:ZipCodeSelected.fields.latitude,longitude:ZipCodeSelected.fields.longitude,onClose:function onClose(){setSelectedZipCode(undefined);}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(\"h5\",null,\"Manager\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(Avatar,null,\"OP\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:9}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(\"button\",null,\"Profile\"))))):null));};export default MapCustom;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","useMyStore","Grid","Avatar","LocationCity","objStore","MapCustom","latitude","longitude","width","height","zoom","viewport","setViewport","arraygpac","state","gpacMapObject","getGpac","getGapMap","zipCodeArray","zipCode","getZipcode","getZipCode","selectedPark","setSelectedPark","ZipCodeSelected","setSelectedZipCode","listener","e","key","undefined","window","addEventListener","console","log","removeEventListener","altitude","map","park","id","latitud","longitud","preventDefault","name","records","datasetid","fields"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport style from '../../assets/css/App.styles'\n\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\n\n\nimport useMyStore from \"../../zustand\"\nimport { Divider, Grid, Avatar } from \"@material-ui/core\";\n\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport { GpacObj, zipCodeObject } from \"../../zustand/types\";\n\nconst [objStore] = useMyStore;\nconst MapCustom: React.FC<{}> = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 40,\n    longitude: -74.5,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  });\n\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);  \n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n \n  const [selectedPark, setSelectedPark] = useState<GpacObj | undefined>();\n \n  const [ZipCodeSelected, setSelectedZipCode] = useState<zipCodeObject | undefined>();\n  useEffect(() => {\n    const listener = (e: { key: string; }) => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n    (async function () {\n       await getGpac();\n      await getZipcode();\n    })()\n    window.addEventListener(\"keydown\", listener);\nconsole.log(zipCodeArray);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n        \n        onViewportChange={viewport => {\n          setViewport({\n            latitude: viewport.altitude,\n            longitude: viewport.longitude,\n            width: \"100vw\",\n            height: \"100vh\",\n            zoom: viewport.zoom\n          });\n        }\n\n        }\n      >\n\n        {arraygpac.map(park => (\n          <Marker\n            key={park.id}\n            latitude={park.latitud}\n            longitude={park.longitud}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedPark(park);\n              }}\n            >\n              <LocationCity />\n            </button>\n          </Marker>\n        )\n        )}\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.latitud}\n            longitude={selectedPark.longitud}\n            onClose={() => {\n              setSelectedPark(undefined);\n            }}\n          >\n            <div>\n\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <h5>{selectedPark.name}</h5>\n                  <h5>Manager</h5>\n                </Grid>\n                <Grid item xs={3}>\n                <Avatar >OP</Avatar>\n                </Grid>\n                <Grid item xs={9}>\n                  <p>{selectedPark.zipCode}</p>\n                </Grid>\n                <Grid item xs={12}>\n                 <button>Profile</button>\n                </Grid>\n              </Grid>\n\n\n            </div>\n          </Popup>\n        ) : null}\n\n      {zipCodeArray.records.map(zipCode => (\n          <Marker\n            key={zipCode.datasetid}\n            latitude={zipCode.fields.latitude}\n            longitude={zipCode.fields.longitude}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedZipCode(zipCode);\n              }}\n            >\n              <LocationCity />\n            </button>\n          </Marker>\n        )\n        )}\n  {ZipCodeSelected ? (\n          <Popup\n            latitude={ZipCodeSelected.fields.latitude}\n            longitude={ZipCodeSelected.fields.longitude}\n            onClose={() => {\n              setSelectedZipCode\n              (undefined);\n            }}\n          >\n            <div>\n\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                   <h5>Manager</h5>\n                </Grid>\n                <Grid item xs={3}>\n                <Avatar >OP</Avatar>\n                </Grid>\n                <Grid item xs={9}>\n                  \n                </Grid>\n                <Grid item xs={12}>\n                 <button>Profile</button>\n                </Grid>\n              </Grid>\n\n\n            </div>\n          </Popup>\n        ) : null}\n\n      </ReactMapGL>\n    </div>\n  );\n\n\n}\n\n\n\nexport default MapCustom;"]},"metadata":{},"sourceType":"module"}