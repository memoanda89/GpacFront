{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport useMyStore from \"../../zustand\";\nimport { Grid, Avatar, Button } from \"@material-ui/core\";\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nconst [objStore] = useMyStore;\n\nconst MapCustom = () => {\n  // const [viewport, setViewport] = useState({\n  //   latitude: 40.5360,\n  //   longitude:-94.7522 ,\n  //   width:1030,\n  //   height:800,\n  //   zoom: 2\n  // });\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n  const configMapa = objStore(state => state.viewport);\n  const setViewPort = objStore(state => state.setViewPort);\n  const [selectedPark, setSelectedPark] = useState();\n  const [ZipCodeSelected, setSelectedZipCode] = useState();\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n\n    (async function () {\n      await getGpac();\n      await getZipcode();\n    })();\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, [arraygpac]);\n\n  function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, configMapa, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport => {\n      // setViewport(viewport);\n      setViewPort(viewport);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), arraygpac.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: uuidv4(),\n    latitude: park.latitud,\n    longitude: park.longitud,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, (selectedPark === null || selectedPark === void 0 ? void 0 : selectedPark.name) == \"Paco\" ? /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(FiberManualRecordIcon, {\n    style: {\n      color: 'green[500]'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 87\n    }\n  })))), selectedPark ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedPark.latitud,\n    longitude: selectedPark.longitud,\n    onClose: () => {\n      setSelectedPark(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '320px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, selectedPark.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 'lighter'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, selectedPark.id))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\\xB7/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"ALPHA\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: \"/static/images/avatar/1.jpg\",\n    style: {\n      marginTop: '15px'\n    },\n    alt: \"My Avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Adyan Sosa\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }, \"User Experience Designer\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      background: 'PRIMARY',\n      width: '100%',\n      borderRadius: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"PROFILE\")))))) : null, zipCodeArray.records.map(zipCode => /*#__PURE__*/React.createElement(Marker, {\n    key: zipCode.datasetid,\n    latitude: zipCode.fields.latitude,\n    longitude: zipCode.fields.longitude,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedZipCode(zipCode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationCity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  })))), ZipCodeSelected ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: ZipCodeSelected.fields.latitude,\n    longitude: ZipCodeSelected.fields.longitude,\n    onClose: () => {\n      setSelectedZipCode(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '320px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, ZipCodeSelected.fields.city, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 'lighter'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 23\n    }\n  }, ZipCodeSelected.fields.state))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\\xB7/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, \"ALPHA\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: \"/static/images/avatar/1.jpg\",\n    style: {\n      marginTop: '15px'\n    },\n    alt: \"My Avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, \"Adyan Sosa\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 23\n    }\n  }, \"User Experience Designer\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      background: 'PRIMARY',\n      width: '100%',\n      borderRadius: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"PROFILE\")))))) : null));\n};\n\nexport default MapCustom;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","useMyStore","Grid","Avatar","Button","LocationCity","FiberManualRecordIcon","objStore","MapCustom","arraygpac","state","gpacMapObject","getGpac","getGapMap","zipCodeArray","zipCode","getZipcode","getZipCode","configMapa","viewport","setViewPort","selectedPark","setSelectedPark","ZipCodeSelected","setSelectedZipCode","listener","e","key","undefined","window","addEventListener","removeEventListener","uuidv4","replace","c","r","Math","random","v","toString","map","park","latitud","longitud","preventDefault","name","color","width","fontWeight","id","marginTop","background","borderRadius","records","datasetid","fields","latitude","longitude","city"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport style from '../../assets/css/App.styles'\n\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\n\n\nimport useMyStore from \"../../zustand\"\nimport { Divider, Grid, Avatar, TableBody, TableCell, TableRow, Button, Icon } from \"@material-ui/core\";\n\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport { GpacObj, zipCodeObject } from \"../../zustand/types\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nconst [objStore] = useMyStore;\nconst MapCustom: React.FC<{}> = () => {\n  // const [viewport, setViewport] = useState({\n  //   latitude: 40.5360,\n  //   longitude:-94.7522 ,\n  //   width:1030,\n  //   height:800,\n  //   zoom: 2\n  // });\n\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n  const configMapa = objStore(state => state.viewport);\n  const setViewPort = objStore(state => state.setViewPort);\n  const [selectedPark, setSelectedPark] = useState<GpacObj | undefined>();\n\n  const [ZipCodeSelected, setSelectedZipCode] = useState<zipCodeObject | undefined>();\n  useEffect(() => {\n    const listener = (e: { key: string; }) => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n    (async function () {\n      await getGpac();\n      await getZipcode();\n    })()\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, [arraygpac]);\n  function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n  return (\n    <div>\n      <ReactMapGL\n        {...configMapa}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n\n        onViewportChange={viewport => {\n          // setViewport(viewport);\n          setViewPort(viewport);\n        }\n\n        }\n      >\n\n        {arraygpac.map(park => (\n          <Marker\n            key={uuidv4()}\n            latitude={park.latitud}\n            longitude={park.longitud}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedPark(park);\n              }}\n            >\n            {selectedPark?.name==\"Paco\"?<FiberManualRecordIcon color=\"secondary\" /> : <FiberManualRecordIcon style={{ color: 'green[500]' }} />}\n            </button>\n          </Marker>\n        )\n        )}\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.latitud}\n            longitude={selectedPark.longitud}\n            onClose={() => {\n              setSelectedPark(undefined);\n            }}\n          >\n            <div>\n\n              <div style={{ width: '320px' }}>\n                <Grid container spacing={1}>\n                  <Grid item xs={9}>\n                    <p style={{ fontWeight: 'bold' }}>{selectedPark.name}\n                  <br />\n          <span style={{ fontWeight: 'lighter' }}>{selectedPark.id}</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <p> <a href='·/'>ALPHA</a></p>\n                  </Grid>\n                  <Grid item xs={2} >\n\n                    <Avatar src=\"/static/images/avatar/1.jpg\" style={{ marginTop: '15px' }} alt=\"My Avatar\" />\n\n                  </Grid>\n                  <Grid item xs={10}>\n                    <p >Adyan Sosa\n                  <br />\n                      <span  >User Experience Designer</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={5}>\n\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{\n                        background: 'PRIMARY',\n                        width: '100%',\n                        borderRadius: '30px',\n\n\n                      }}\n                    >\n                      PROFILE\n      </Button>\n                  </Grid>\n                </Grid>\n\n              </div>\n            </div>\n          </Popup>\n        ) : null}\n\n        {zipCodeArray.records.map(zipCode => (\n          <Marker\n            key={zipCode.datasetid}\n            latitude={zipCode.fields.latitude}\n            longitude={zipCode.fields.longitude}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedZipCode(zipCode);\n              }}\n            >\n              <LocationCity />\n            </button>\n          </Marker>\n        )\n        )}\n        {ZipCodeSelected ? (\n          <Popup\n            latitude={ZipCodeSelected.fields.latitude}\n            longitude={ZipCodeSelected.fields.longitude}\n            onClose={() => {\n              setSelectedZipCode\n                (undefined);\n            }}\n          >\n            <div>\n\n            <div style={{ width: '320px' }}>\n                <Grid container spacing={1}>\n                  <Grid item xs={9}>\n                    <p style={{ fontWeight: 'bold' }}>{ZipCodeSelected.fields.city}\n                  <br />\n                      <span style={{ fontWeight: 'lighter' }}>{ZipCodeSelected.fields.state}</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <p> <a href='·/'>ALPHA</a></p>\n                  </Grid>\n                  <Grid item xs={2} >\n\n                    <Avatar src=\"/static/images/avatar/1.jpg\" style={{ marginTop: '15px' }} alt=\"My Avatar\" />\n\n                  </Grid>\n                  <Grid item xs={10}>\n                    <p >Adyan Sosa\n                  <br />\n                      <span  >User Experience Designer</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={5}>\n\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{\n                        background: 'PRIMARY',\n                        width: '100%',\n                        borderRadius: '30px',\n                      }}\n                    >\n                      PROFILE\n      </Button>\n                  </Grid>\n                </Grid>\n\n              </div>\n            </div>\n          </Popup>\n        ) : null}  \n\n      </ReactMapGL>\n    </div>\n  );\n\n\n}\n\n\n\nexport default MapCustom;"]},"metadata":{},"sourceType":"module"}