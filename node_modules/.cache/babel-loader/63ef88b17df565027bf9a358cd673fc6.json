{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport useMyStore from \"../../zustand\";\nconst [objStore] = useMyStore;\n\nconst MapCustom = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 45.4211,\n    longitude: -75.6903,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  });\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n  const [selectedPark, setSelectedPark] = useState();\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n\n    (async function () {\n      await getGpac();\n    })();\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport2 => {\n      setViewport({\n        latitude: viewport2.altitude,\n        longitude: viewport2.longitude,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: viewport2.zoom\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }), arraygpac.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: park.id,\n    latitude: park.latitud,\n    longitude: park.longitud,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/skateboarding.svg\",\n    alt: \"Skate Park Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })))), selectedPark ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedPark.latitud,\n    longitude: selectedPark.longitud,\n    onClose: () => {\n      setSelectedPark(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, selectedPark.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, selectedPark.zipCode))) : null));\n};\n\nexport default MapCustom;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","useMyStore","objStore","MapCustom","viewport","setViewport","latitude","longitude","width","height","zoom","arraygpac","state","gpacMapObject","getGpac","getGapMap","selectedPark","setSelectedPark","listener","e","key","undefined","window","addEventListener","removeEventListener","viewport2","altitude","map","park","id","latitud","longitud","preventDefault","name","zipCode"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport style from '../../assets/css/App.styles'  \n \nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\n\n\nimport useMyStore from \"../../zustand\"\nimport { Divider } from \"@material-ui/core\";\n\n\nimport { GpacObj } from \"../../zustand/types\";\n\nconst [objStore] = useMyStore;\n    const MapCustom :  React.FC<{}> = () => {\n      const [viewport, setViewport] = useState({\n        latitude: 45.4211,\n        longitude: -75.6903,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: 10\n      });\n   \n      const arraygpac= objStore(state => state.gpacMapObject);\n      const getGpac=objStore(state => state.getGapMap);\n\n    const [selectedPark, setSelectedPark] = useState<GpacObj | undefined>();\n      useEffect(() => {\n        const listener = (e: { key: string; }) => {\n          if (e.key === \"Escape\") {\n            setSelectedPark(undefined);\n          }\n        };\n        (async function (){\n          await getGpac();\n         \n      })()\n        window.addEventListener(\"keydown\", listener);\n    \n        return () => {\n          window.removeEventListener(\"keydown\", listener);\n        };\n      }, []);\n     \n            return (\n              <div>\n              <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n        onViewportChange={ viewport2 =>{\n           setViewport({\n            latitude: viewport2.altitude,\n            longitude: viewport2.longitude,\n            width: \"100vw\",\n            height: \"100vh\",\n            zoom: viewport2.zoom\n           });\n        }\n\n        }\n      >\n     \n     {arraygpac.map(park => (\n          <Marker\n            key={park.id}\n            latitude={park.latitud}\n            longitude={park.longitud}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedPark(park);\n              }}\n            >\n              <img src=\"/skateboarding.svg\" alt=\"Skate Park Icon\" />\n            </button>\n          </Marker>\n        )\n       )}\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.latitud}\n            longitude={selectedPark.longitud}\n            onClose={() => {\n              setSelectedPark(undefined);\n            }}\n          >\n            <div>\n              <h2>{selectedPark.name}</h2>\n              <p>{selectedPark.zipCode}</p>\n            </div>\n          </Popup>\n        ) : null}   \n      </ReactMapGL>\n            </div>\n            );\n          \n\n}\n\n\n\nexport default MapCustom;"]},"metadata":{},"sourceType":"module"}