{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport useMyStore from \"../../zustand\";\nimport { Grid, Avatar } from \"@material-ui/core\";\nimport LocationCity from '@material-ui/icons/LocationCity';\nconst [objStore] = useMyStore;\n\nconst MapCustom = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 40,\n    longitude: -74.5,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 6\n  });\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n  const [selectedPark, setSelectedPark] = useState();\n  const [ZipCodeSelected, setSelectedZipCode] = useState();\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n\n    (async function () {\n      await getGpac();\n      await getZipcode();\n    })();\n\n    window.addEventListener(\"keydown\", listener);\n    console.log(zipCodeArray);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport2 => {\n      setViewport({\n        latitude: viewport2.altitude,\n        longitude: viewport2.longitude,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: viewport2.zoom\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), arraygpac.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: park.id,\n    latitude: park.latitud,\n    longitude: park.longitud,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationCity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })))), selectedPark ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedPark.latitud,\n    longitude: selectedPark.longitud,\n    onClose: () => {\n      setSelectedPark(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, selectedPark.name), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, \"Manager\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"OP\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, selectedPark.zipCode)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 18\n    }\n  }, \"Profile\"))))) : null, zipCodeArray.records.map(zipCode => /*#__PURE__*/React.createElement(Marker, {\n    key: zipCode.datasetid,\n    latitude: zipCode.fields.latitude,\n    longitude: zipCode.fields.longitude,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedZipCode(zipCode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationCity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  })))), ZipCodeSelected ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: ZipCodeSelected.fields.latitude,\n    longitude: ZipCodeSelected.fields.longitude,\n    onClose: () => {\n      setSelectedZipCode(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 20\n    }\n  }, \"Manager\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"OP\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 18\n    }\n  }, \"Profile\"))))) : null));\n};\n\nexport default MapCustom;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","useMyStore","Grid","Avatar","LocationCity","objStore","MapCustom","viewport","setViewport","latitude","longitude","width","height","zoom","arraygpac","state","gpacMapObject","getGpac","getGapMap","zipCodeArray","zipCode","getZipcode","getZipCode","selectedPark","setSelectedPark","ZipCodeSelected","setSelectedZipCode","listener","e","key","undefined","window","addEventListener","console","log","removeEventListener","viewport2","altitude","map","park","id","latitud","longitud","preventDefault","name","records","datasetid","fields"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport style from '../../assets/css/App.styles'\n\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\n\n\nimport useMyStore from \"../../zustand\"\nimport { Divider, Grid, Avatar } from \"@material-ui/core\";\n\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport { GpacObj, zipCodeObject } from \"../../zustand/types\";\n\nconst [objStore] = useMyStore;\nconst MapCustom: React.FC<{}> = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 40,\n    longitude: -74.5,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 6\n  });\n\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);  \n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n \n  const [selectedPark, setSelectedPark] = useState<GpacObj | undefined>();\n \n  const [ZipCodeSelected, setSelectedZipCode] = useState<zipCodeObject | undefined>();\n  useEffect(() => {\n    const listener = (e: { key: string; }) => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n    (async function () {\n       await getGpac();\n      await getZipcode();\n    })()\n    window.addEventListener(\"keydown\", listener);\nconsole.log(zipCodeArray);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n        \n        onViewportChange={viewport2 => {\n          setViewport({\n            latitude: viewport2.altitude,\n            longitude: viewport2.longitude,\n            width: \"100vw\",\n            height: \"100vh\",\n            zoom: viewport2.zoom\n          });\n        }\n\n        }\n      >\n\n        {arraygpac.map(park => (\n          <Marker\n            key={park.id}\n            latitude={park.latitud}\n            longitude={park.longitud}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedPark(park);\n              }}\n            >\n              <LocationCity />\n            </button>\n          </Marker>\n        )\n        )}\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.latitud}\n            longitude={selectedPark.longitud}\n            onClose={() => {\n              setSelectedPark(undefined);\n            }}\n          >\n            <div>\n\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <h5>{selectedPark.name}</h5>\n                  <h5>Manager</h5>\n                </Grid>\n                <Grid item xs={3}>\n                <Avatar >OP</Avatar>\n                </Grid>\n                <Grid item xs={9}>\n                  <p>{selectedPark.zipCode}</p>\n                </Grid>\n                <Grid item xs={12}>\n                 <button>Profile</button>\n                </Grid>\n              </Grid>\n\n\n            </div>\n          </Popup>\n        ) : null}\n\n      {zipCodeArray.records.map(zipCode => (\n          <Marker\n            key={zipCode.datasetid}\n            latitude={zipCode.fields.latitude}\n            longitude={zipCode.fields.longitude}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedZipCode(zipCode);\n              }}\n            >\n              <LocationCity />\n            </button>\n          </Marker>\n        )\n        )}\n  {ZipCodeSelected ? (\n          <Popup\n            latitude={ZipCodeSelected.fields.latitude}\n            longitude={ZipCodeSelected.fields.longitude}\n            onClose={() => {\n              setSelectedZipCode\n              (undefined);\n            }}\n          >\n            <div>\n\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                   <h5>Manager</h5>\n                </Grid>\n                <Grid item xs={3}>\n                <Avatar >OP</Avatar>\n                </Grid>\n                <Grid item xs={9}>\n                  \n                </Grid>\n                <Grid item xs={12}>\n                 <button>Profile</button>\n                </Grid>\n              </Grid>\n\n\n            </div>\n          </Popup>\n        ) : null}\n\n      </ReactMapGL>\n    </div>\n  );\n\n\n}\n\n\n\nexport default MapCustom;"]},"metadata":{},"sourceType":"module"}