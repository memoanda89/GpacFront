{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/ToolbarMenu/index.tsx\";\nimport React from \"react\";\nimport { IconButton, Toolbar, Avatar, InputBase, fade, createStyles, makeStyles, useTheme, Grid, Select } from '@material-ui/core';\nimport logo from './../../assets/images/logoGpac.png';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useStyles = makeStyles(theme => createStyles({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  textSearch: {\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    border: \"1px solid black\"\n  },\n  comboSearch: {\n    width: 140,\n    background: \"#3f51b5\",\n    color: \"white\",\n    height: \"37px !important\",\n    marginTop: 1,\n    borderTopRightRadius: 15,\n    borderBottomRightRadius: 15\n  }\n}));\n\nconst ToolbarMenu = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const top100Films = [{\n    title: 'The Shawshank Redemption',\n    year: 1994\n  }, {\n    title: 'The Godfather',\n    year: 1972\n  }, {\n    title: 'The Godfather: Part II',\n    year: 1974\n  }, {\n    title: 'The Dark Knight',\n    year: 2008\n  }, {\n    title: '12 Angry Men',\n    year: 1957\n  }, {\n    title: \"Schindler's List\",\n    year: 1993\n  }, {\n    title: 'Pulp Fiction',\n    year: 1994\n  }, {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003\n  }, {\n    title: 'The Good, the Bad and the Ugly',\n    year: 1966\n  }, {\n    title: 'Fight Club',\n    year: 1999\n  }, {\n    title: 'The Lord of the Rings: The Fellowship of the Ring',\n    year: 2001\n  }, {\n    title: 'Star Wars: Episode V - The Empire Strikes Back',\n    year: 1980\n  }, {\n    title: 'Forrest Gump',\n    year: 1994\n  }, {\n    title: 'Inception',\n    year: 2010\n  }, {\n    title: 'The Lord of the Rings: The Two Towers',\n    year: 2002\n  }, {\n    title: \"One Flew Over the Cuckoo's Nest\",\n    year: 1975\n  }, {\n    title: 'Goodfellas',\n    year: 1990\n  }, {\n    title: 'The Matrix',\n    year: 1999\n  }, {\n    title: 'Seven Samurai',\n    year: 1954\n  }, {\n    title: 'Star Wars: Episode IV - A New Hope',\n    year: 1977\n  }, {\n    title: 'City of God',\n    year: 2002\n  }, {\n    title: 'Se7en',\n    year: 1995\n  }, {\n    title: 'The Silence of the Lambs',\n    year: 1991\n  }, {\n    title: \"It's a Wonderful Life\",\n    year: 1946\n  }, {\n    title: 'Life Is Beautiful',\n    year: 1997\n  }, {\n    title: 'The Usual Suspects',\n    year: 1995\n  }, {\n    title: 'Léon: The Professional',\n    year: 1994\n  }, {\n    title: 'Spirited Away',\n    year: 2001\n  }, {\n    title: 'Saving Private Ryan',\n    year: 1998\n  }, {\n    title: 'Once Upon a Time in the West',\n    year: 1968\n  }, {\n    title: 'American History X',\n    year: 1998\n  }, {\n    title: 'Interstellar',\n    year: 2014\n  }, {\n    title: 'Casablanca',\n    year: 1942\n  }, {\n    title: 'City Lights',\n    year: 1931\n  }, {\n    title: 'Psycho',\n    year: 1960\n  }, {\n    title: 'The Green Mile',\n    year: 1999\n  }, {\n    title: 'The Intouchables',\n    year: 2011\n  }, {\n    title: 'Modern Times',\n    year: 1936\n  }, {\n    title: 'Raiders of the Lost Ark',\n    year: 1981\n  }, {\n    title: 'Rear Window',\n    year: 1954\n  }, {\n    title: 'The Pianist',\n    year: 2002\n  }, {\n    title: 'The Departed',\n    year: 2006\n  }, {\n    title: 'Terminator 2: Judgment Day',\n    year: 1991\n  }, {\n    title: 'Back to the Future',\n    year: 1985\n  }, {\n    title: 'Whiplash',\n    year: 2014\n  }, {\n    title: 'Gladiator',\n    year: 2000\n  }, {\n    title: 'Memento',\n    year: 2000\n  }, {\n    title: 'The Prestige',\n    year: 2006\n  }, {\n    title: 'The Lion King',\n    year: 1994\n  }, {\n    title: 'Apocalypse Now',\n    year: 1979\n  }, {\n    title: 'Alien',\n    year: 1979\n  }, {\n    title: 'Sunset Boulevard',\n    year: 1950\n  }, {\n    title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n    year: 1964\n  }, {\n    title: 'The Great Dictator',\n    year: 1940\n  }, {\n    title: 'Cinema Paradiso',\n    year: 1988\n  }, {\n    title: 'The Lives of Others',\n    year: 2006\n  }, {\n    title: 'Grave of the Fireflies',\n    year: 1988\n  }, {\n    title: 'Paths of Glory',\n    year: 1957\n  }, {\n    title: 'Django Unchained',\n    year: 2012\n  }, {\n    title: 'The Shining',\n    year: 1980\n  }, {\n    title: 'WALL·E',\n    year: 2008\n  }, {\n    title: 'American Beauty',\n    year: 1999\n  }, {\n    title: 'The Dark Knight Rises',\n    year: 2012\n  }, {\n    title: 'Princess Mononoke',\n    year: 1997\n  }, {\n    title: 'Aliens',\n    year: 1986\n  }, {\n    title: 'Oldboy',\n    year: 2003\n  }, {\n    title: 'Once Upon a Time in America',\n    year: 1984\n  }, {\n    title: 'Witness for the Prosecution',\n    year: 1957\n  }, {\n    title: 'Das Boot',\n    year: 1981\n  }, {\n    title: 'Citizen Kane',\n    year: 1941\n  }, {\n    title: 'North by Northwest',\n    year: 1959\n  }, {\n    title: 'Vertigo',\n    year: 1958\n  }, {\n    title: 'Star Wars: Episode VI - Return of the Jedi',\n    year: 1983\n  }, {\n    title: 'Reservoir Dogs',\n    year: 1992\n  }, {\n    title: 'Braveheart',\n    year: 1995\n  }, {\n    title: 'M',\n    year: 1931\n  }, {\n    title: 'Requiem for a Dream',\n    year: 2000\n  }, {\n    title: 'Amélie',\n    year: 2001\n  }, {\n    title: 'A Clockwork Orange',\n    year: 1971\n  }, {\n    title: 'Like Stars on Earth',\n    year: 2007\n  }, {\n    title: 'Taxi Driver',\n    year: 1976\n  }, {\n    title: 'Lawrence of Arabia',\n    year: 1962\n  }, {\n    title: 'Double Indemnity',\n    year: 1944\n  }, {\n    title: 'Eternal Sunshine of the Spotless Mind',\n    year: 2004\n  }, {\n    title: 'Amadeus',\n    year: 1984\n  }, {\n    title: 'To Kill a Mockingbird',\n    year: 1962\n  }, {\n    title: 'Toy Story 3',\n    year: 2010\n  }, {\n    title: 'Logan',\n    year: 2017\n  }, {\n    title: 'Full Metal Jacket',\n    year: 1987\n  }, {\n    title: 'Dangal',\n    year: 2016\n  }, {\n    title: 'The Sting',\n    year: 1973\n  }, {\n    title: '2001: A Space Odyssey',\n    year: 1968\n  }, {\n    title: \"Singin' in the Rain\",\n    year: 1952\n  }, {\n    title: 'Toy Story',\n    year: 1995\n  }, {\n    title: 'Bicycle Thieves',\n    year: 1948\n  }, {\n    title: 'The Kid',\n    year: 1921\n  }, {\n    title: 'Inglourious Basterds',\n    year: 2009\n  }, {\n    title: 'Snatch',\n    year: 2000\n  }, {\n    title: '3 Idiots',\n    year: 2009\n  }, {\n    title: 'Monty Python and the Holy Grail',\n    year: 1975\n  }];\n  return /*#__PURE__*/React.createElement(Toolbar, {\n    style: {\n      backgroundColor: \"white\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    style: {\n      height: \"40px\"\n    },\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(InputBase, {\n    className: classes.textSearch,\n    placeholder: \"Search\\u2026\",\n    classes: {\n      root: classes.inputRoot,\n      input: classes.inputInput\n    },\n    inputProps: {\n      'aria-label': 'search'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    inputProps: {\n      name: 'age',\n      id: 'age-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, \"Candidate\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, \"Twenty\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, \"Thirty\")), /*#__PURE__*/React.createElement(Autocomplete, {\n    className: classes.comboSearch,\n    id: \"combo-box-demo\",\n    options: top100Films,\n    getOptionLabel: option => option.title,\n    style: {\n      width: 300\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Combo box\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 36\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsNoneIcon, {\n    style: {\n      marginTop: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 12\n    }\n  }, \"Jonathan\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: \"/static/images/avatar/1.jpg\",\n    alt: \"My Avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"display more actions\",\n    edge: \"end\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default ToolbarMenu;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/ToolbarMenu/index.tsx"],"names":["React","IconButton","Toolbar","Avatar","InputBase","fade","createStyles","makeStyles","useTheme","Grid","Select","logo","NotificationsNoneIcon","SearchIcon","MoreVertIcon","TextField","Autocomplete","useStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","textSearch","borderTopLeftRadius","borderBottomLeftRadius","border","comboSearch","background","marginTop","borderTopRightRadius","borderBottomRightRadius","ToolbarMenu","classes","top100Films","year","root","input","name","id","option","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,OAArB,EAAkDC,MAAlD,EAA0DC,SAA1D,EAAqEC,IAArE,EAA2EC,YAA3E,EAAgGC,UAAhG,EAA4GC,QAA5G,EAAsHC,IAAtH,EAA4HC,MAA5H,QAA0I,mBAA1I;AAGA,OAAOC,IAAP,MAAiB,oCAAjB;AAEA,OAAOC,qBAAP,MAAkC,sCAAlC;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AAGA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,IAC7BZ,YAAY,CAAC;AACXa,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADK;AAIXC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADH,GAJD;AAOXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAEL,KAACP,KAAK,CAACQ,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,OAAO,EAAE;AADmB;AAFzB,GAPI;AAaXG,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,YAAY,EAAEZ,KAAK,CAACa,KAAN,CAAYD,YAFpB;AAGNE,IAAAA,eAAe,EAAE3B,IAAI,CAACa,KAAK,CAACe,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B,CAHf;AAIN,eAAW;AACTH,MAAAA,eAAe,EAAE3B,IAAI,CAACa,KAAK,CAACe,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B;AADZ,KAJL;AAONb,IAAAA,WAAW,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CAPP;AAQNa,IAAAA,UAAU,EAAE,CARN;AASNC,IAAAA,KAAK,EAAE,MATD;AAUN,KAACnB,KAAK,CAACQ,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BS,MAAAA,UAAU,EAAElB,KAAK,CAACK,OAAN,CAAc,CAAd,CADgB;AAE5Bc,MAAAA,KAAK,EAAE;AAFqB;AAVxB,GAbG;AA4BXC,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAErB,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADC;AAEViB,IAAAA,MAAM,EAAE,MAFE;AAGVX,IAAAA,QAAQ,EAAE,UAHA;AAIVY,IAAAA,aAAa,EAAE,MAJL;AAKVhB,IAAAA,OAAO,EAAE,MALC;AAMViB,IAAAA,UAAU,EAAE,QANF;AAOVC,IAAAA,cAAc,EAAE;AAPN,GA5BD;AAqCXC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE,GArCA;AAwCXC,EAAAA,UAAU,EAAE;AACVP,IAAAA,OAAO,EAAErB,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CADC;AAEV;AACAwB,IAAAA,WAAW,EAAG,cAAa7B,KAAK,CAACK,OAAN,CAAc,CAAd,CAAiB,KAHlC;AAIVyB,IAAAA,UAAU,EAAE9B,KAAK,CAAC+B,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CAJF;AAKVb,IAAAA,KAAK,EAAE,MALG;AAMV,KAACnB,KAAK,CAACQ,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BU,MAAAA,KAAK,EAAE;AADqB;AANpB,GAxCD;AAkDXc,EAAAA,cAAc,EAAE;AACd1B,IAAAA,OAAO,EAAE,MADK;AAEd,KAACP,KAAK,CAACQ,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,OAAO,EAAE;AADmB;AAFhB,GAlDL;AAwDX2B,EAAAA,aAAa,EAAE;AACb3B,IAAAA,OAAO,EAAE,MADI;AAEb,KAACP,KAAK,CAACQ,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BF,MAAAA,OAAO,EAAE;AADmB;AAFjB,GAxDJ;AA8DX4B,EAAAA,UAAU,EAAG;AACXC,IAAAA,mBAAmB,EAAC,EADT;AAEXC,IAAAA,sBAAsB,EAAC,EAFZ;AAGXC,IAAAA,MAAM,EAAC;AAHI,GA9DF;AAmEXC,EAAAA,WAAW,EAAG;AACZpB,IAAAA,KAAK,EAAE,GADK;AAEZqB,IAAAA,UAAU,EAAE,SAFA;AAGZb,IAAAA,KAAK,EAAE,OAHK;AAIZL,IAAAA,MAAM,EAAE,iBAJI;AAKZmB,IAAAA,SAAS,EAAC,CALE;AAMZC,IAAAA,oBAAoB,EAAC,EANT;AAOZC,IAAAA,uBAAuB,EAAC;AAPZ;AAnEH,CAAD,CADgB,CAA5B;;AAiFI,MAAMC,WAA2B,GAAG,MAAM;AACxC,QAAMC,OAAO,GAAG9C,SAAS,EAAzB;AACA,QAAMC,KAAK,GAAGV,QAAQ,EAAtB;AAEA,QAAMwD,WAAW,GAAG,CAClB;AAAExC,IAAAA,KAAK,EAAE,0BAAT;AAAqCyC,IAAAA,IAAI,EAAE;AAA3C,GADkB,EAElB;AAAEzC,IAAAA,KAAK,EAAE,eAAT;AAA0ByC,IAAAA,IAAI,EAAE;AAAhC,GAFkB,EAGlB;AAAEzC,IAAAA,KAAK,EAAE,wBAAT;AAAmCyC,IAAAA,IAAI,EAAE;AAAzC,GAHkB,EAIlB;AAAEzC,IAAAA,KAAK,EAAE,iBAAT;AAA4ByC,IAAAA,IAAI,EAAE;AAAlC,GAJkB,EAKlB;AAAEzC,IAAAA,KAAK,EAAE,cAAT;AAAyByC,IAAAA,IAAI,EAAE;AAA/B,GALkB,EAMlB;AAAEzC,IAAAA,KAAK,EAAE,kBAAT;AAA6ByC,IAAAA,IAAI,EAAE;AAAnC,GANkB,EAOlB;AAAEzC,IAAAA,KAAK,EAAE,cAAT;AAAyByC,IAAAA,IAAI,EAAE;AAA/B,GAPkB,EAQlB;AAAEzC,IAAAA,KAAK,EAAE,+CAAT;AAA0DyC,IAAAA,IAAI,EAAE;AAAhE,GARkB,EASlB;AAAEzC,IAAAA,KAAK,EAAE,gCAAT;AAA2CyC,IAAAA,IAAI,EAAE;AAAjD,GATkB,EAUlB;AAAEzC,IAAAA,KAAK,EAAE,YAAT;AAAuByC,IAAAA,IAAI,EAAE;AAA7B,GAVkB,EAWlB;AAAEzC,IAAAA,KAAK,EAAE,mDAAT;AAA8DyC,IAAAA,IAAI,EAAE;AAApE,GAXkB,EAYlB;AAAEzC,IAAAA,KAAK,EAAE,gDAAT;AAA2DyC,IAAAA,IAAI,EAAE;AAAjE,GAZkB,EAalB;AAAEzC,IAAAA,KAAK,EAAE,cAAT;AAAyByC,IAAAA,IAAI,EAAE;AAA/B,GAbkB,EAclB;AAAEzC,IAAAA,KAAK,EAAE,WAAT;AAAsByC,IAAAA,IAAI,EAAE;AAA5B,GAdkB,EAelB;AAAEzC,IAAAA,KAAK,EAAE,uCAAT;AAAkDyC,IAAAA,IAAI,EAAE;AAAxD,GAfkB,EAgBlB;AAAEzC,IAAAA,KAAK,EAAE,iCAAT;AAA4CyC,IAAAA,IAAI,EAAE;AAAlD,GAhBkB,EAiBlB;AAAEzC,IAAAA,KAAK,EAAE,YAAT;AAAuByC,IAAAA,IAAI,EAAE;AAA7B,GAjBkB,EAkBlB;AAAEzC,IAAAA,KAAK,EAAE,YAAT;AAAuByC,IAAAA,IAAI,EAAE;AAA7B,GAlBkB,EAmBlB;AAAEzC,IAAAA,KAAK,EAAE,eAAT;AAA0ByC,IAAAA,IAAI,EAAE;AAAhC,GAnBkB,EAoBlB;AAAEzC,IAAAA,KAAK,EAAE,oCAAT;AAA+CyC,IAAAA,IAAI,EAAE;AAArD,GApBkB,EAqBlB;AAAEzC,IAAAA,KAAK,EAAE,aAAT;AAAwByC,IAAAA,IAAI,EAAE;AAA9B,GArBkB,EAsBlB;AAAEzC,IAAAA,KAAK,EAAE,OAAT;AAAkByC,IAAAA,IAAI,EAAE;AAAxB,GAtBkB,EAuBlB;AAAEzC,IAAAA,KAAK,EAAE,0BAAT;AAAqCyC,IAAAA,IAAI,EAAE;AAA3C,GAvBkB,EAwBlB;AAAEzC,IAAAA,KAAK,EAAE,uBAAT;AAAkCyC,IAAAA,IAAI,EAAE;AAAxC,GAxBkB,EAyBlB;AAAEzC,IAAAA,KAAK,EAAE,mBAAT;AAA8ByC,IAAAA,IAAI,EAAE;AAApC,GAzBkB,EA0BlB;AAAEzC,IAAAA,KAAK,EAAE,oBAAT;AAA+ByC,IAAAA,IAAI,EAAE;AAArC,GA1BkB,EA2BlB;AAAEzC,IAAAA,KAAK,EAAE,wBAAT;AAAmCyC,IAAAA,IAAI,EAAE;AAAzC,GA3BkB,EA4BlB;AAAEzC,IAAAA,KAAK,EAAE,eAAT;AAA0ByC,IAAAA,IAAI,EAAE;AAAhC,GA5BkB,EA6BlB;AAAEzC,IAAAA,KAAK,EAAE,qBAAT;AAAgCyC,IAAAA,IAAI,EAAE;AAAtC,GA7BkB,EA8BlB;AAAEzC,IAAAA,KAAK,EAAE,8BAAT;AAAyCyC,IAAAA,IAAI,EAAE;AAA/C,GA9BkB,EA+BlB;AAAEzC,IAAAA,KAAK,EAAE,oBAAT;AAA+ByC,IAAAA,IAAI,EAAE;AAArC,GA/BkB,EAgClB;AAAEzC,IAAAA,KAAK,EAAE,cAAT;AAAyByC,IAAAA,IAAI,EAAE;AAA/B,GAhCkB,EAiClB;AAAEzC,IAAAA,KAAK,EAAE,YAAT;AAAuByC,IAAAA,IAAI,EAAE;AAA7B,GAjCkB,EAkClB;AAAEzC,IAAAA,KAAK,EAAE,aAAT;AAAwByC,IAAAA,IAAI,EAAE;AAA9B,GAlCkB,EAmClB;AAAEzC,IAAAA,KAAK,EAAE,QAAT;AAAmByC,IAAAA,IAAI,EAAE;AAAzB,GAnCkB,EAoClB;AAAEzC,IAAAA,KAAK,EAAE,gBAAT;AAA2ByC,IAAAA,IAAI,EAAE;AAAjC,GApCkB,EAqClB;AAAEzC,IAAAA,KAAK,EAAE,kBAAT;AAA6ByC,IAAAA,IAAI,EAAE;AAAnC,GArCkB,EAsClB;AAAEzC,IAAAA,KAAK,EAAE,cAAT;AAAyByC,IAAAA,IAAI,EAAE;AAA/B,GAtCkB,EAuClB;AAAEzC,IAAAA,KAAK,EAAE,yBAAT;AAAoCyC,IAAAA,IAAI,EAAE;AAA1C,GAvCkB,EAwClB;AAAEzC,IAAAA,KAAK,EAAE,aAAT;AAAwByC,IAAAA,IAAI,EAAE;AAA9B,GAxCkB,EAyClB;AAAEzC,IAAAA,KAAK,EAAE,aAAT;AAAwByC,IAAAA,IAAI,EAAE;AAA9B,GAzCkB,EA0ClB;AAAEzC,IAAAA,KAAK,EAAE,cAAT;AAAyByC,IAAAA,IAAI,EAAE;AAA/B,GA1CkB,EA2ClB;AAAEzC,IAAAA,KAAK,EAAE,4BAAT;AAAuCyC,IAAAA,IAAI,EAAE;AAA7C,GA3CkB,EA4ClB;AAAEzC,IAAAA,KAAK,EAAE,oBAAT;AAA+ByC,IAAAA,IAAI,EAAE;AAArC,GA5CkB,EA6ClB;AAAEzC,IAAAA,KAAK,EAAE,UAAT;AAAqByC,IAAAA,IAAI,EAAE;AAA3B,GA7CkB,EA8ClB;AAAEzC,IAAAA,KAAK,EAAE,WAAT;AAAsByC,IAAAA,IAAI,EAAE;AAA5B,GA9CkB,EA+ClB;AAAEzC,IAAAA,KAAK,EAAE,SAAT;AAAoByC,IAAAA,IAAI,EAAE;AAA1B,GA/CkB,EAgDlB;AAAEzC,IAAAA,KAAK,EAAE,cAAT;AAAyByC,IAAAA,IAAI,EAAE;AAA/B,GAhDkB,EAiDlB;AAAEzC,IAAAA,KAAK,EAAE,eAAT;AAA0ByC,IAAAA,IAAI,EAAE;AAAhC,GAjDkB,EAkDlB;AAAEzC,IAAAA,KAAK,EAAE,gBAAT;AAA2ByC,IAAAA,IAAI,EAAE;AAAjC,GAlDkB,EAmDlB;AAAEzC,IAAAA,KAAK,EAAE,OAAT;AAAkByC,IAAAA,IAAI,EAAE;AAAxB,GAnDkB,EAoDlB;AAAEzC,IAAAA,KAAK,EAAE,kBAAT;AAA6ByC,IAAAA,IAAI,EAAE;AAAnC,GApDkB,EAqDlB;AAAEzC,IAAAA,KAAK,EAAE,sEAAT;AAAiFyC,IAAAA,IAAI,EAAE;AAAvF,GArDkB,EAsDlB;AAAEzC,IAAAA,KAAK,EAAE,oBAAT;AAA+ByC,IAAAA,IAAI,EAAE;AAArC,GAtDkB,EAuDlB;AAAEzC,IAAAA,KAAK,EAAE,iBAAT;AAA4ByC,IAAAA,IAAI,EAAE;AAAlC,GAvDkB,EAwDlB;AAAEzC,IAAAA,KAAK,EAAE,qBAAT;AAAgCyC,IAAAA,IAAI,EAAE;AAAtC,GAxDkB,EAyDlB;AAAEzC,IAAAA,KAAK,EAAE,wBAAT;AAAmCyC,IAAAA,IAAI,EAAE;AAAzC,GAzDkB,EA0DlB;AAAEzC,IAAAA,KAAK,EAAE,gBAAT;AAA2ByC,IAAAA,IAAI,EAAE;AAAjC,GA1DkB,EA2DlB;AAAEzC,IAAAA,KAAK,EAAE,kBAAT;AAA6ByC,IAAAA,IAAI,EAAE;AAAnC,GA3DkB,EA4DlB;AAAEzC,IAAAA,KAAK,EAAE,aAAT;AAAwByC,IAAAA,IAAI,EAAE;AAA9B,GA5DkB,EA6DlB;AAAEzC,IAAAA,KAAK,EAAE,QAAT;AAAmByC,IAAAA,IAAI,EAAE;AAAzB,GA7DkB,EA8DlB;AAAEzC,IAAAA,KAAK,EAAE,iBAAT;AAA4ByC,IAAAA,IAAI,EAAE;AAAlC,GA9DkB,EA+DlB;AAAEzC,IAAAA,KAAK,EAAE,uBAAT;AAAkCyC,IAAAA,IAAI,EAAE;AAAxC,GA/DkB,EAgElB;AAAEzC,IAAAA,KAAK,EAAE,mBAAT;AAA8ByC,IAAAA,IAAI,EAAE;AAApC,GAhEkB,EAiElB;AAAEzC,IAAAA,KAAK,EAAE,QAAT;AAAmByC,IAAAA,IAAI,EAAE;AAAzB,GAjEkB,EAkElB;AAAEzC,IAAAA,KAAK,EAAE,QAAT;AAAmByC,IAAAA,IAAI,EAAE;AAAzB,GAlEkB,EAmElB;AAAEzC,IAAAA,KAAK,EAAE,6BAAT;AAAwCyC,IAAAA,IAAI,EAAE;AAA9C,GAnEkB,EAoElB;AAAEzC,IAAAA,KAAK,EAAE,6BAAT;AAAwCyC,IAAAA,IAAI,EAAE;AAA9C,GApEkB,EAqElB;AAAEzC,IAAAA,KAAK,EAAE,UAAT;AAAqByC,IAAAA,IAAI,EAAE;AAA3B,GArEkB,EAsElB;AAAEzC,IAAAA,KAAK,EAAE,cAAT;AAAyByC,IAAAA,IAAI,EAAE;AAA/B,GAtEkB,EAuElB;AAAEzC,IAAAA,KAAK,EAAE,oBAAT;AAA+ByC,IAAAA,IAAI,EAAE;AAArC,GAvEkB,EAwElB;AAAEzC,IAAAA,KAAK,EAAE,SAAT;AAAoByC,IAAAA,IAAI,EAAE;AAA1B,GAxEkB,EAyElB;AAAEzC,IAAAA,KAAK,EAAE,4CAAT;AAAuDyC,IAAAA,IAAI,EAAE;AAA7D,GAzEkB,EA0ElB;AAAEzC,IAAAA,KAAK,EAAE,gBAAT;AAA2ByC,IAAAA,IAAI,EAAE;AAAjC,GA1EkB,EA2ElB;AAAEzC,IAAAA,KAAK,EAAE,YAAT;AAAuByC,IAAAA,IAAI,EAAE;AAA7B,GA3EkB,EA4ElB;AAAEzC,IAAAA,KAAK,EAAE,GAAT;AAAcyC,IAAAA,IAAI,EAAE;AAApB,GA5EkB,EA6ElB;AAAEzC,IAAAA,KAAK,EAAE,qBAAT;AAAgCyC,IAAAA,IAAI,EAAE;AAAtC,GA7EkB,EA8ElB;AAAEzC,IAAAA,KAAK,EAAE,QAAT;AAAmByC,IAAAA,IAAI,EAAE;AAAzB,GA9EkB,EA+ElB;AAAEzC,IAAAA,KAAK,EAAE,oBAAT;AAA+ByC,IAAAA,IAAI,EAAE;AAArC,GA/EkB,EAgFlB;AAAEzC,IAAAA,KAAK,EAAE,qBAAT;AAAgCyC,IAAAA,IAAI,EAAE;AAAtC,GAhFkB,EAiFlB;AAAEzC,IAAAA,KAAK,EAAE,aAAT;AAAwByC,IAAAA,IAAI,EAAE;AAA9B,GAjFkB,EAkFlB;AAAEzC,IAAAA,KAAK,EAAE,oBAAT;AAA+ByC,IAAAA,IAAI,EAAE;AAArC,GAlFkB,EAmFlB;AAAEzC,IAAAA,KAAK,EAAE,kBAAT;AAA6ByC,IAAAA,IAAI,EAAE;AAAnC,GAnFkB,EAoFlB;AAAEzC,IAAAA,KAAK,EAAE,uCAAT;AAAkDyC,IAAAA,IAAI,EAAE;AAAxD,GApFkB,EAqFlB;AAAEzC,IAAAA,KAAK,EAAE,SAAT;AAAoByC,IAAAA,IAAI,EAAE;AAA1B,GArFkB,EAsFlB;AAAEzC,IAAAA,KAAK,EAAE,uBAAT;AAAkCyC,IAAAA,IAAI,EAAE;AAAxC,GAtFkB,EAuFlB;AAAEzC,IAAAA,KAAK,EAAE,aAAT;AAAwByC,IAAAA,IAAI,EAAE;AAA9B,GAvFkB,EAwFlB;AAAEzC,IAAAA,KAAK,EAAE,OAAT;AAAkByC,IAAAA,IAAI,EAAE;AAAxB,GAxFkB,EAyFlB;AAAEzC,IAAAA,KAAK,EAAE,mBAAT;AAA8ByC,IAAAA,IAAI,EAAE;AAApC,GAzFkB,EA0FlB;AAAEzC,IAAAA,KAAK,EAAE,QAAT;AAAmByC,IAAAA,IAAI,EAAE;AAAzB,GA1FkB,EA2FlB;AAAEzC,IAAAA,KAAK,EAAE,WAAT;AAAsByC,IAAAA,IAAI,EAAE;AAA5B,GA3FkB,EA4FlB;AAAEzC,IAAAA,KAAK,EAAE,uBAAT;AAAkCyC,IAAAA,IAAI,EAAE;AAAxC,GA5FkB,EA6FlB;AAAEzC,IAAAA,KAAK,EAAE,qBAAT;AAAgCyC,IAAAA,IAAI,EAAE;AAAtC,GA7FkB,EA8FlB;AAAEzC,IAAAA,KAAK,EAAE,WAAT;AAAsByC,IAAAA,IAAI,EAAE;AAA5B,GA9FkB,EA+FlB;AAAEzC,IAAAA,KAAK,EAAE,iBAAT;AAA4ByC,IAAAA,IAAI,EAAE;AAAlC,GA/FkB,EAgGlB;AAAEzC,IAAAA,KAAK,EAAE,SAAT;AAAoByC,IAAAA,IAAI,EAAE;AAA1B,GAhGkB,EAiGlB;AAAEzC,IAAAA,KAAK,EAAE,sBAAT;AAAiCyC,IAAAA,IAAI,EAAE;AAAvC,GAjGkB,EAkGlB;AAAEzC,IAAAA,KAAK,EAAE,QAAT;AAAmByC,IAAAA,IAAI,EAAE;AAAzB,GAlGkB,EAmGlB;AAAEzC,IAAAA,KAAK,EAAE,UAAT;AAAqByC,IAAAA,IAAI,EAAE;AAA3B,GAnGkB,EAoGlB;AAAEzC,IAAAA,KAAK,EAAE,iCAAT;AAA4CyC,IAAAA,IAAI,EAAE;AAAlD,GApGkB,CAApB;AAsGF,sBAGM,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAACjC,MAAAA,eAAe,EAAC,OAAjB;AAAyBa,MAAAA,KAAK,EAAC;AAA/B,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,GAAG,EAAElC,IAAV;AAAgB,IAAA,KAAK,EAAE;AAAC6B,MAAAA,MAAM,EAAC;AAAR,KAAvB;AAAwC,IAAA,GAAG,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADA,eAIF,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAED;AAAK,IAAA,SAAS,EAAEuB,OAAO,CAACnC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEmC,OAAO,CAACzB,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEyB,OAAO,CAACV,UAA9B;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,OAAO,EAAE;AACPa,MAAAA,IAAI,EAAEH,OAAO,CAACnB,SADP;AAEPuB,MAAAA,KAAK,EAAEJ,OAAO,CAACjB;AAFR,KAFX;AAME,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAYT,oBAAC,MAAD;AACS,IAAA,MAAM,MADf;AAIS,IAAA,UAAU,EAAE;AACVsB,MAAAA,IAAI,EAAE,KADI;AAEVC,MAAAA,EAAE,EAAE;AAFM,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASS;AAAQ,kBAAW,MAAnB;AAA0B,IAAA,KAAK,EAAC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATT,eAUS;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVT,eAWS;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXT,eAYS;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZT,CAZS,eA0BF,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEN,OAAO,CAACN,WAAjC;AACF,IAAA,EAAE,EAAC,gBADD;AAEF,IAAA,OAAO,EAAEO,WAFP;AAGF,IAAA,cAAc,EAAGM,MAAD,IAA6BA,MAAM,CAAC9C,KAHlD;AAIF,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE;AAAT,KAJL;AAKF,IAAA,WAAW,EAAGkC,MAAD,iBAAgB,oBAAC,SAAD,oBAAeA,MAAf;AAAuB,MAAA,KAAK,EAAC,WAA7B;AAAyC,MAAA,OAAO,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BE,CAFC,CAJE,eAyCF,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,qBAAD;AAAuB,IAAA,KAAK,EAAE;AAACZ,MAAAA,SAAS,EAAC;AAAX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAzCE,eA4CF,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAY,IAAA,KAAK,EAAE;AAACA,MAAAA,SAAS,EAAC;AAAX,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CA5CE,eAgDD,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,6BAAZ;AAA0C,IAAA,GAAG,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAhDC,eAqDF,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,UAAD;AAAY,kBAAW,sBAAvB;AAA8C,IAAA,IAAI,EAAC,KAAnD;AAAyD,IAAA,KAAK,EAAC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFA,CArDE,CADH,CAHN;AAyEH,CAnLG;;AAqLJ,eAAeG,WAAf","sourcesContent":["import React from \"react\";\n\nimport { IconButton, Toolbar, Typography, Button, Avatar, InputBase, fade, createStyles, Theme, makeStyles, useTheme, Grid, Select } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport logo from './../../assets/images/logoGpac.png' \nimport LogoGpac from \"../LogoGpac\";\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport MyButton from '../Boton'\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/More';\nimport style from '../../assets/css/App.styles' \nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  textSearch : {\n    borderTopLeftRadius:10 ,\n    borderBottomLeftRadius:10 ,\n    border:\"1px solid black\"\n  },\n  comboSearch : {\n    width: 140,\n    background: \"#3f51b5\",\n    color: \"white\",\n    height: \"37px !important\",\n    marginTop:1,\n    borderTopRightRadius:15,\n    borderBottomRightRadius:15\n \n}\n\n}),\n);\n    const ToolbarMenu :  React.FC<{}> = () => {\n      const classes = useStyles();\n      const theme = useTheme();\n\n      const top100Films = [\n        { title: 'The Shawshank Redemption', year: 1994 },\n        { title: 'The Godfather', year: 1972 },\n        { title: 'The Godfather: Part II', year: 1974 },\n        { title: 'The Dark Knight', year: 2008 },\n        { title: '12 Angry Men', year: 1957 },\n        { title: \"Schindler's List\", year: 1993 },\n        { title: 'Pulp Fiction', year: 1994 },\n        { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n        { title: 'The Good, the Bad and the Ugly', year: 1966 },\n        { title: 'Fight Club', year: 1999 },\n        { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n        { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n        { title: 'Forrest Gump', year: 1994 },\n        { title: 'Inception', year: 2010 },\n        { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n        { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n        { title: 'Goodfellas', year: 1990 },\n        { title: 'The Matrix', year: 1999 },\n        { title: 'Seven Samurai', year: 1954 },\n        { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n        { title: 'City of God', year: 2002 },\n        { title: 'Se7en', year: 1995 },\n        { title: 'The Silence of the Lambs', year: 1991 },\n        { title: \"It's a Wonderful Life\", year: 1946 },\n        { title: 'Life Is Beautiful', year: 1997 },\n        { title: 'The Usual Suspects', year: 1995 },\n        { title: 'Léon: The Professional', year: 1994 },\n        { title: 'Spirited Away', year: 2001 },\n        { title: 'Saving Private Ryan', year: 1998 },\n        { title: 'Once Upon a Time in the West', year: 1968 },\n        { title: 'American History X', year: 1998 },\n        { title: 'Interstellar', year: 2014 },\n        { title: 'Casablanca', year: 1942 },\n        { title: 'City Lights', year: 1931 },\n        { title: 'Psycho', year: 1960 },\n        { title: 'The Green Mile', year: 1999 },\n        { title: 'The Intouchables', year: 2011 },\n        { title: 'Modern Times', year: 1936 },\n        { title: 'Raiders of the Lost Ark', year: 1981 },\n        { title: 'Rear Window', year: 1954 },\n        { title: 'The Pianist', year: 2002 },\n        { title: 'The Departed', year: 2006 },\n        { title: 'Terminator 2: Judgment Day', year: 1991 },\n        { title: 'Back to the Future', year: 1985 },\n        { title: 'Whiplash', year: 2014 },\n        { title: 'Gladiator', year: 2000 },\n        { title: 'Memento', year: 2000 },\n        { title: 'The Prestige', year: 2006 },\n        { title: 'The Lion King', year: 1994 },\n        { title: 'Apocalypse Now', year: 1979 },\n        { title: 'Alien', year: 1979 },\n        { title: 'Sunset Boulevard', year: 1950 },\n        { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n        { title: 'The Great Dictator', year: 1940 },\n        { title: 'Cinema Paradiso', year: 1988 },\n        { title: 'The Lives of Others', year: 2006 },\n        { title: 'Grave of the Fireflies', year: 1988 },\n        { title: 'Paths of Glory', year: 1957 },\n        { title: 'Django Unchained', year: 2012 },\n        { title: 'The Shining', year: 1980 },\n        { title: 'WALL·E', year: 2008 },\n        { title: 'American Beauty', year: 1999 },\n        { title: 'The Dark Knight Rises', year: 2012 },\n        { title: 'Princess Mononoke', year: 1997 },\n        { title: 'Aliens', year: 1986 },\n        { title: 'Oldboy', year: 2003 },\n        { title: 'Once Upon a Time in America', year: 1984 },\n        { title: 'Witness for the Prosecution', year: 1957 },\n        { title: 'Das Boot', year: 1981 },\n        { title: 'Citizen Kane', year: 1941 },\n        { title: 'North by Northwest', year: 1959 },\n        { title: 'Vertigo', year: 1958 },\n        { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n        { title: 'Reservoir Dogs', year: 1992 },\n        { title: 'Braveheart', year: 1995 },\n        { title: 'M', year: 1931 },\n        { title: 'Requiem for a Dream', year: 2000 },\n        { title: 'Amélie', year: 2001 },\n        { title: 'A Clockwork Orange', year: 1971 },\n        { title: 'Like Stars on Earth', year: 2007 },\n        { title: 'Taxi Driver', year: 1976 },\n        { title: 'Lawrence of Arabia', year: 1962 },\n        { title: 'Double Indemnity', year: 1944 },\n        { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n        { title: 'Amadeus', year: 1984 },\n        { title: 'To Kill a Mockingbird', year: 1962 },\n        { title: 'Toy Story 3', year: 2010 },\n        { title: 'Logan', year: 2017 },\n        { title: 'Full Metal Jacket', year: 1987 },\n        { title: 'Dangal', year: 2016 },\n        { title: 'The Sting', year: 1973 },\n        { title: '2001: A Space Odyssey', year: 1968 },\n        { title: \"Singin' in the Rain\", year: 1952 },\n        { title: 'Toy Story', year: 1995 },\n        { title: 'Bicycle Thieves', year: 1948 },\n        { title: 'The Kid', year: 1921 },\n        { title: 'Inglourious Basterds', year: 2009 },\n        { title: 'Snatch', year: 2000 },\n        { title: '3 Idiots', year: 2009 },\n        { title: 'Monty Python and the Holy Grail', year: 1975 },\n      ];\n    return (\n       \n          \n          <Toolbar style={{backgroundColor:\"white\",color:\"black\"}}>\n             <Grid container spacing={3}>\n             <Grid item xs={2}>\n              <img src={logo} style={{height:\"40px\"}} alt=\"logo\" />\n           </Grid>\n           <Grid item xs={8}>\n               \n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase className={classes.textSearch}\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n <Select \n          native\n         \n       \n          inputProps={{\n            name: 'age',\n            id: 'age-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={1}>Candidate</option>\n          <option value={2}>Twenty</option>\n          <option value={3}>Thirty</option>\n        </Select>\n        <Autocomplete className={classes.comboSearch}\n      id=\"combo-box-demo\"\n      options={top100Films}\n      getOptionLabel={(option: { title: any; }) => option.title}\n      style={{ width: 300 }}\n      renderInput={(params:any) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n    />\n          </div>\n           </Grid>\n           <Grid item >\n           <NotificationsNoneIcon style={{marginTop:'8px'}} />\n           </Grid>\n           <Grid item  style={{marginTop:'10px'}}>\n           <label  >Jonathan</label>\n           </Grid>\n           \n            <Grid item>\n            \n                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\n               \n           </Grid>\n           <Grid item>\n            \n           <IconButton aria-label=\"display more actions\" edge=\"end\" color=\"inherit\">\n            <MoreVertIcon />\n          </IconButton>\n           \n       </Grid>\n          \n          </Grid>\n\n        \n        </Toolbar>\n        \n    );\n\n\n}\n\nexport default ToolbarMenu;"]},"metadata":{},"sourceType":"module"}