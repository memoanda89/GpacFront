{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/Navigator/index.tsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\nconst categories = [{\n  id: 'Menu',\n  children: [{\n    id: 'Home',\n    icon: /*#__PURE__*/React.createElement(PeopleIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    })\n  }, {\n    id: 'Map',\n    icon: /*#__PURE__*/React.createElement(DnsRoundedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 28\n      }\n    }),\n    active: true\n  }, {\n    id: 'Inventory',\n    icon: /*#__PURE__*/React.createElement(PermMediaOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 34\n      }\n    })\n  }]\n}];\n\nconst styles = theme => ({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(26, 5, 6, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)'\n    }\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white\n  },\n  itemActiveItem: {\n    color: '#black'\n  },\n  itemPrimary: {\n    fontSize: 'inherit'\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2)\n  },\n  divider: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nfunction Navigator(props) {\n  const {\n    classes,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, categories.map(({\n    id,\n    children\n  }) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, children.map(({\n    id: childId,\n    icon,\n    active\n  }) => /*#__PURE__*/React.createElement(ListItem, {\n    key: childId,\n    button: true,\n    className: clsx(classes.item, active && classes.itemActiveItem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classes.itemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, icon), /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classes.itemPrimary\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, childId))), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }))));\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Navigator);","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/Navigator/index.tsx"],"names":["React","PropTypes","clsx","withStyles","Divider","List","ListItem","ListItemIcon","ListItemText","PeopleIcon","DnsRoundedIcon","PermMediaOutlinedIcon","categories","id","children","icon","active","styles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","Navigator","props","classes","other","map","childId","primary","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\nconst categories = [\n    {\n      id: 'Menu',\n      children: [\n        { id: 'Home', icon: <PeopleIcon /> },\n        { id: 'Map', icon: <DnsRoundedIcon /> , active: true},\n        { id: 'Inventory', icon: <PermMediaOutlinedIcon /> },\n         \n      ],\n    }\n  ];\n  \n  const styles = (theme: { spacing: (arg0: number) => any; palette: { common: { white: any; }; }; }) => ({\n    categoryHeader: {\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    categoryHeaderPrimary: {\n      color: theme.palette.common.white,\n    },\n    item: {\n      paddingTop: 1,\n      paddingBottom: 1,\n      color: 'rgba(26, 5, 6, 0.7)',\n      '&:hover,&:focus': {\n        backgroundColor: 'rgba(255, 255, 255, 0.08)',\n      },\n    },\n    itemCategory: {\n      backgroundColor: '#232f3e',\n      boxShadow: '0 -1px 0 #404854 inset',\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    firebase: {\n      fontSize: 24,\n      color: theme.palette.common.white,\n    },\n    itemActiveItem: {\n      color: '#black',\n    },\n    itemPrimary: {\n      fontSize: 'inherit',\n    },\n    itemIcon: {\n      minWidth: 'auto',\n      marginRight: theme.spacing(2),\n    },\n    divider: {\n      marginTop: theme.spacing(2),\n    },\n  });\n  \n  function Navigator(props: { [x: string]: any; classes: any; }) {\n    const { classes, ...other } = props;\n  \n    return (\n       \n        <List >\n         \n          {categories.map(({ id, children }) => (\n            <React.Fragment key={id}>\n              \n              {children.map(({ id: childId, icon, active }) => (\n                <ListItem\n                  key={childId}\n                  button\n                  className={clsx(classes.item, active && classes.itemActiveItem)}\n                >\n                  <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\n                  <ListItemText\n                    classes={{\n                      primary: classes.itemPrimary,\n                    }}\n                  >\n                    {childId}\n                  </ListItemText>\n                </ListItem>\n              ))}\n  \n              <Divider className={classes.divider} />\n            </React.Fragment>\n          ))}\n        </List>\n      \n    );\n  }\n  \n  Navigator.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(Navigator);"]},"metadata":{},"sourceType":"module"}