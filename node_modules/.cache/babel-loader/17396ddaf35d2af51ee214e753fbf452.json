{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/InventoryFilters/index.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport CustomSelect from \"../CustomSelect\";\nimport useMyStore from \"../../zustand\";\nimport { Button } from \"@material-ui/core\";\nimport CustomTextField from \"../CustomTextField\";\nimport CustomSelectOnChange from \"../CustomSelectOnChange\";\nconst [objStore] = useMyStore;\n\nconst InventoryFilters = () => {\n  const Search = objStore(state => state.searchMap);\n  const [search, setSearch] = useState({\n    activty: 0,\n    type: 0\n  });\n  const infoSearch = {\n    activty: 0,\n    type: 0,\n    coach: 0,\n    recluter: 0,\n    candidate: 0,\n    functional: 0,\n    specilty: 0,\n    industry: 0,\n    state: \"\"\n  };\n  const arrayActivity = objStore(state => state.activity);\n  const getActivity = objStore(state => state.getActivity);\n  const arrayType = objStore(state => state.type);\n  const getType = objStore(state => state.getType);\n  const arrayIndustry = objStore(state => state.generic);\n  const getGeneric = objStore(state => state.getGeneric);\n  const arraySpecilty = objStore(state => state.specilty);\n  const getGenericSpecilty = objStore(state => state.getSpecilty);\n  const arrayFunctional = objStore(state => state.functional);\n  const getFunctional = objStore(state => state.getFunctional);\n  const arrayCandidate = objStore(state => state.candidate);\n  const getCandidate = objStore(state => state.getCandidate);\n  const arrayCoach = objStore(state => state.coach);\n  const getCoach = objStore(state => state.getCoach);\n  const arrayRecluiter = objStore(state => state.recluiter);\n  const getRecluter = objStore(state => state.getRecluter);\n  const arrayState = objStore(state => state.stated);\n  const getState = objStore(state => state.getStated);\n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n  const isLoading = objStore(state => state.isLoading);\n  useEffect(() => {\n    (async function () {\n      await getActivity();\n      await getType();\n      await getZipcode();\n      await getGeneric(\"Industry\");\n      await getGenericSpecilty(\"specialty\");\n      await getFunctional(\"functional\");\n      await getCandidate(\"candidate_type\");\n      await getCoach(\"coach\");\n      await getRecluter(\"recruiter\");\n      await getState(\"state\");\n    })();\n  }, []);\n\n  const renderActivity = () => {\n    if (arrayActivity && arrayActivity.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, {\n        contenido: arrayActivity.contenido,\n        catalogo: arrayActivity.catalogo,\n        seleccionadoValor: setActivity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderType = () => {\n    if (arrayType && arrayType.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, {\n        contenido: arrayType.contenido,\n        catalogo: arrayType.catalogo,\n        seleccionadoValor: setType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderSpecilty = () => {\n    if (arraySpecilty && arraySpecilty.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, {\n        contenido: arraySpecilty.contenido,\n        catalogo: arraySpecilty.catalogo,\n        seleccionadoValor: setSpecilty,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderIndustry = () => {\n    if (arrayIndustry && arrayIndustry.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, {\n        contenido: arrayIndustry.contenido,\n        catalogo: arrayIndustry.catalogo,\n        seleccionadoValor: setIndustry,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderFunctional = () => {\n    if (arrayFunctional && arrayFunctional.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, {\n        contenido: arrayFunctional.contenido,\n        catalogo: arrayFunctional.catalogo,\n        seleccionadoValor: setFunctional,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderCandidate = () => {\n    if (arrayCandidate && arrayCandidate.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, {\n        contenido: arrayCandidate.contenido,\n        catalogo: arrayCandidate.catalogo,\n        seleccionadoValor: setCandidate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderCoach = () => {\n    if (arrayCoach && arrayCoach.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, {\n        contenido: arrayCoach.contenido,\n        catalogo: arrayCoach.catalogo,\n        seleccionadoValor: setCoach,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderRecluter = () => {\n    if (arrayRecluiter && arrayRecluiter.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, {\n        contenido: arrayRecluiter.contenido,\n        catalogo: arrayRecluiter.catalogo,\n        seleccionadoValor: setRecluter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderState = () => {\n    if (zipCodeArray && zipCodeArray.facet_groups.length) {\n      const zipCode = zipCodeArray.records.map(recorod => {\n        let rObj = {\n          id: recorod.fields.zip,\n          description: recorod.fields.zip\n        };\n        return rObj;\n      });\n      console.log(zipCode);\n      return /*#__PURE__*/React.createElement(CustomSelectOnChange, {\n        contenido: zipCodeArray.facet_groups,\n        catalogo: \"state\",\n        seleccionadoValor: setStated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderZip = () => {\n    if (zipCodeArray && zipCodeArray.facet_groups.length) {\n      const zipCode = zipCodeArray.records.map(recorod => {\n        let rObj = {\n          id: recorod.fields.zip,\n          description: recorod.fields.zip\n        };\n        return rObj;\n      });\n      console.log(zipCode);\n      return /*#__PURE__*/React.createElement(CustomSelect, {\n        contenido: zipCodeArray.records,\n        catalogo: \"zip\",\n        seleccionadoValor: setStated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 14\n        }\n      });\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const setStated = async seleccionado => {\n    infoSearch.state = seleccionado; // await getActivity();\n  };\n\n  const setActivity = seleccionado => {\n    infoSearch.activty = seleccionado;\n  };\n\n  const setType = seleccionado => {\n    infoSearch.type = seleccionado;\n  };\n\n  const setCoach = seleccionado => {\n    infoSearch.coach = seleccionado;\n  };\n\n  const setRecluter = seleccionado => {\n    infoSearch.recluter = seleccionado;\n  };\n\n  const setCandidate = seleccionado => {\n    infoSearch.candidate = seleccionado;\n  };\n\n  const setFunctional = seleccionado => {\n    infoSearch.functional = seleccionado;\n  };\n\n  const setSpecilty = seleccionado => {\n    infoSearch.specilty = seleccionado;\n  };\n\n  const setIndustry = seleccionado => {\n    infoSearch.industry = seleccionado;\n  };\n\n  const handleOpen = seleccionado => {\n    console.log(infoSearch);\n    alert(infoSearch);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"filters\",\n    style: {\n      borderLeft: \"1px solid grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, renderType(), /*#__PURE__*/React.createElement(CustomTextField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }), renderIndustry(), renderSpecilty(), renderActivity(), renderFunctional(), renderCandidate(), renderCoach(), renderRecluter(), renderState(), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    onClick: handleOpen,\n    style: {\n      width: '100%',\n      borderRadius: '30px',\n      padding: '5px',\n      marginLeft: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, \"SEARCH\"));\n};\n\nexport default InventoryFilters;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/InventoryFilters/index.tsx"],"names":["React","useEffect","useState","CustomSelect","useMyStore","Button","CustomTextField","CustomSelectOnChange","objStore","InventoryFilters","Search","state","searchMap","search","setSearch","activty","type","infoSearch","coach","recluter","candidate","functional","specilty","industry","arrayActivity","activity","getActivity","arrayType","getType","arrayIndustry","generic","getGeneric","arraySpecilty","getGenericSpecilty","getSpecilty","arrayFunctional","getFunctional","arrayCandidate","getCandidate","arrayCoach","getCoach","arrayRecluiter","recluiter","getRecluter","arrayState","stated","getState","getStated","zipCodeArray","zipCode","getZipcode","getZipCode","isLoading","renderActivity","contenido","length","catalogo","setActivity","renderType","setType","renderSpecilty","setSpecilty","renderIndustry","setIndustry","renderFunctional","setFunctional","renderCandidate","setCandidate","renderCoach","setCoach","renderRecluter","setRecluter","renderState","facet_groups","records","map","recorod","rObj","id","fields","zip","description","console","log","setStated","renderZip","seleccionado","handleOpen","alert","borderLeft","width","borderRadius","padding","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAAkBC,MAAlB,QAAgC,mBAAhC;AAGA,OAAOC,eAAP,MAA4B,oBAA5B;AAEA,OAAOC,oBAAP,MAAiC,yBAAjC;AAEA,MAAM,CAACC,QAAD,IAAaJ,UAAnB;;AAEA,MAAMK,gBAA8B,GAAG,MAAM;AAC7C,QAAMC,MAAM,GAACF,QAAQ,CAACG,KAAK,IAAEA,KAAK,CAACC,SAAd,CAArB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAwB;AAC1Da,IAAAA,OAAO,EAAC,CADkD;AAE1DC,IAAAA,IAAI,EAAC;AAFqD,GAAxB,CAApC;AAKA,QAAMC,UAAU,GAAG;AACjBF,IAAAA,OAAO,EAAC,CADS;AAEjBC,IAAAA,IAAI,EAAC,CAFY;AAGjBE,IAAAA,KAAK,EAAC,CAHW;AAIjBC,IAAAA,QAAQ,EAAC,CAJQ;AAKjBC,IAAAA,SAAS,EAAC,CALO;AAMjBC,IAAAA,UAAU,EAAC,CANM;AAOjBC,IAAAA,QAAQ,EAAC,CAPQ;AAQjBC,IAAAA,QAAQ,EAAC,CARQ;AASjBZ,IAAAA,KAAK,EAAC;AATW,GAAnB;AAYE,QAAMa,aAAa,GAAGhB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACc,QAAhB,CAA9B;AACA,QAAMC,WAAW,GAAGlB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACe,WAAhB,CAA5B;AACA,QAAMC,SAAS,GAAGnB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACK,IAAhB,CAA1B;AACA,QAAMY,OAAO,GAAGpB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACiB,OAAhB,CAAxB;AACA,QAAMC,aAAa,GAAGrB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACmB,OAAhB,CAA9B;AACA,QAAMC,UAAU,GAAGvB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACoB,UAAhB,CAA3B;AACA,QAAMC,aAAa,GAAExB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACW,QAAhB,CAA7B;AACA,QAAMW,kBAAkB,GAACzB,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACuB,WAAhB,CAAjC;AAEA,QAAMC,eAAe,GAAE3B,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACU,UAAhB,CAA/B;AACA,QAAMe,aAAa,GAAC5B,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACyB,aAAhB,CAA5B;AACA,QAAMC,cAAc,GAAE7B,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACS,SAAhB,CAA9B;AACA,QAAMkB,YAAY,GAAC9B,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAAC2B,YAAhB,CAA3B;AACA,QAAMC,UAAU,GAAE/B,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACO,KAAhB,CAA1B;AACA,QAAMsB,QAAQ,GAAChC,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAAC6B,QAAhB,CAAvB;AAEA,QAAMC,cAAc,GAAEjC,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAAC+B,SAAhB,CAA9B;AACA,QAAMC,WAAW,GAACnC,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACgC,WAAhB,CAA1B;AAEA,QAAMC,UAAU,GAAEpC,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACkC,MAAhB,CAA1B;AACA,QAAMC,QAAQ,GAACtC,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACoC,SAAhB,CAAvB;AAEA,QAAMC,YAAY,GAAGxC,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACsC,OAAhB,CAA7B;AACA,QAAMC,UAAU,GAAG1C,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACwC,UAAhB,CAA3B;AAEA,QAAMC,SAAS,GAAG5C,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACyC,SAAhB,CAA1B;AACAnD,EAAAA,SAAS,CAAC,MAAM;AAEd,KAAC,kBAAkB;AACjB,YAAMyB,WAAW,EAAjB;AACA,YAAME,OAAO,EAAb;AACA,YAAMsB,UAAU,EAAhB;AACA,YAAMnB,UAAU,CAAC,UAAD,CAAhB;AACA,YAAME,kBAAkB,CAAC,WAAD,CAAxB;AACA,YAAMG,aAAa,CAAC,YAAD,CAAnB;AACA,YAAME,YAAY,CAAC,gBAAD,CAAlB;AACA,YAAME,QAAQ,CAAC,OAAD,CAAd;AACA,YAAMG,WAAW,CAAC,WAAD,CAAjB;AACA,YAAMG,QAAQ,CAAC,OAAD,CAAd;AACD,KAXD;AAYD,GAdQ,EAeP,EAfO,CAAT;;AAoBA,QAAMO,cAAc,GAAG,MAAwC;AAC7D,QAAI7B,aAAa,IAAIA,aAAa,CAAC8B,SAAd,CAAwBC,MAA7C,EAAqD;AACnD,0BAAO,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAE/B,aAAa,CAAC8B,SAAvC;AAAkD,QAAA,QAAQ,EAAE9B,aAAa,CAACgC,QAA1E;AAAoF,QAAA,iBAAiB,EAAEC,WAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAIL,SAAJ,EAAe;AACpB,aAAO,UAAP;AACD;AACF,GAND;;AAOA,QAAMM,UAAU,GAAG,MAAwC;AACzD,QAAI/B,SAAS,IAAIA,SAAS,CAAC2B,SAAV,CAAoBC,MAArC,EAA6C;AAC3C,0BAAO,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAE5B,SAAS,CAAC2B,SAAnC;AAA8C,QAAA,QAAQ,EAAE3B,SAAS,CAAC6B,QAAlE;AAA4E,QAAA,iBAAiB,EAAEG,OAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAED,KAHD,MAGO,IAAIP,SAAJ,EAAe;AACpB,aAAO,UAAP;AACD;AACF,GAPD;;AAQA,QAAMQ,cAAc,GAAG,MAAwC;AAC7D,QAAI5B,aAAa,IAAIA,aAAa,CAACsB,SAAd,CAAwBC,MAA7C,EAAqD;AACnD,0BAAO,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEvB,aAAa,CAACsB,SAAvC;AAAkD,QAAA,QAAQ,EAAEtB,aAAa,CAACwB,QAA1E;AAAoF,QAAA,iBAAiB,EAAEK,WAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAED,KAHD,MAGO,IAAIT,SAAJ,EAAe;AACpB,aAAO,UAAP;AACD;AACF,GAPD;;AAQA,QAAMU,cAAc,GAAG,MAAwC;AAC7D,QAAIjC,aAAa,IAAIA,aAAa,CAACyB,SAAd,CAAwBC,MAA7C,EAAqD;AACnD,0BAAO,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAE1B,aAAa,CAACyB,SAAvC;AAAkD,QAAA,QAAQ,EAAEzB,aAAa,CAAC2B,QAA1E;AAAoF,QAAA,iBAAiB,EAAEO,WAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAIX,SAAJ,EAAe;AACpB,aAAO,UAAP;AACD;AACF,GAND;;AAOA,QAAMY,gBAAgB,GAAG,MAAwC;AAC/D,QAAI7B,eAAe,IAAIA,eAAe,CAACmB,SAAhB,CAA0BC,MAAjD,EAAyD;AACvD,0BAAO,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEpB,eAAe,CAACmB,SAAzC;AAAoD,QAAA,QAAQ,EAAEnB,eAAe,CAACqB,QAA9E;AAAwF,QAAA,iBAAiB,EAAES,aAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAIb,SAAJ,EAAe;AACpB,aAAO,UAAP;AACD;AACF,GAND;;AAOA,QAAMc,eAAe,GAAG,MAAwC;AAC9D,QAAI7B,cAAc,IAAIA,cAAc,CAACiB,SAAf,CAAyBC,MAA/C,EAAuD;AACrD,0BAAO,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAElB,cAAc,CAACiB,SAAxC;AAAmD,QAAA,QAAQ,EAAEjB,cAAc,CAACmB,QAA5E;AAAsF,QAAA,iBAAiB,EAAEW,YAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAIf,SAAJ,EAAe;AACpB,aAAO,UAAP;AACD;AACF,GAND;;AAOA,QAAMgB,WAAW,GAAG,MAAwC;AAC1D,QAAI7B,UAAU,IAAIA,UAAU,CAACe,SAAX,CAAqBC,MAAvC,EAA+C;AAC7C,0BAAO,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEhB,UAAU,CAACe,SAApC;AAA+C,QAAA,QAAQ,EAAEf,UAAU,CAACiB,QAApE;AAA8E,QAAA,iBAAiB,EAAEa,QAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF,KAFA,MAEM,IAAIjB,SAAJ,EAAe;AACnB,aAAO,UAAP;AACD;AACF,GAND;;AAOA,QAAMkB,cAAc,GAAG,MAAwC;AAC7D,QAAI7B,cAAc,IAAIA,cAAc,CAACa,SAAf,CAAyBC,MAA/C,EAAuD;AACrD,0BAAO,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEd,cAAc,CAACa,SAAxC;AAAmD,QAAA,QAAQ,EAAEb,cAAc,CAACe,QAA5E;AAAsF,QAAA,iBAAiB,EAAEe,WAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO,IAAInB,SAAJ,EAAe;AACpB,aAAO,UAAP;AACD;AACF,GAND;;AAOA,QAAMoB,WAAW,GAAG,MAAwC;AAC1D,QAAIxB,YAAY,IAAIA,YAAY,CAACyB,YAAb,CAA0BlB,MAA9C,EAAsD;AACpD,YAAMN,OAAO,GAAGD,YAAY,CAAC0B,OAAb,CAAqBC,GAArB,CAA0BC,OAAO,IAAG;AAElD,YAAIC,IAAI,GAAG;AACTC,UAAAA,EAAE,EAACF,OAAO,CAACG,MAAR,CAAeC,GADT;AAETC,UAAAA,WAAW,EAACL,OAAO,CAACG,MAAR,CAAeC;AAFlB,SAAX;AAML,eAAOH,IAAP;AAEI,OAVe,CAAhB;AAWAK,MAAAA,OAAO,CAACC,GAAR,CAAYlC,OAAZ;AACA,0BAAO,oBAAC,oBAAD;AAAsB,QAAA,SAAS,EAAED,YAAY,CAACyB,YAA9C;AAA4D,QAAA,QAAQ,EAAE,OAAtE;AAA+E,QAAA,iBAAiB,EAAEW,SAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAdD,MAcO,IAAIhC,SAAJ,EAAe;AACpB,aAAO,UAAP;AACD;AACF,GAlBD;;AAmBA,QAAMiC,SAAS,GAAG,MAAwC;AACxD,QAAIrC,YAAY,IAAIA,YAAY,CAACyB,YAAb,CAA0BlB,MAA9C,EAAsD;AACpD,YAAMN,OAAO,GAAGD,YAAY,CAAC0B,OAAb,CAAqBC,GAArB,CAA0BC,OAAO,IAAG;AAElD,YAAIC,IAAI,GAAG;AACTC,UAAAA,EAAE,EAACF,OAAO,CAACG,MAAR,CAAeC,GADT;AAETC,UAAAA,WAAW,EAACL,OAAO,CAACG,MAAR,CAAeC;AAFlB,SAAX;AAML,eAAOH,IAAP;AAEI,OAVe,CAAhB;AAWAK,MAAAA,OAAO,CAACC,GAAR,CAAYlC,OAAZ;AACA,0BAAO,oBAAC,YAAD;AAAe,QAAA,SAAS,EAAED,YAAY,CAAC0B,OAAvC;AAAgD,QAAA,QAAQ,EAAE,KAA1D;AAAiE,QAAA,iBAAiB,EAAEU,SAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAdD,MAcO,IAAIhC,SAAJ,EAAe;AACpB,aAAO,UAAP;AACD;AACF,GAlBD;;AAoBA,QAAMgC,SAAS,GAAG,MAAOE,YAAP,IAAgC;AAChDrE,IAAAA,UAAU,CAACN,KAAX,GAAiB2E,YAAjB,CADgD,CAG/C;AAIF,GAPD;;AASA,QAAM7B,WAAW,GAAI6B,YAAD,IAA0B;AAC5CrE,IAAAA,UAAU,CAACF,OAAX,GAAmBuE,YAAnB;AAED,GAHD;;AAKA,QAAM3B,OAAO,GAAI2B,YAAD,IAA0B;AACxCrE,IAAAA,UAAU,CAACD,IAAX,GAAgBsE,YAAhB;AAED,GAHD;;AAKA,QAAMjB,QAAQ,GAAIiB,YAAD,IAA0B;AACzCrE,IAAAA,UAAU,CAACC,KAAX,GAAiBoE,YAAjB;AAED,GAHD;;AAKA,QAAMf,WAAW,GAAIe,YAAD,IAA0B;AAC5CrE,IAAAA,UAAU,CAACE,QAAX,GAAoBmE,YAApB;AAED,GAHD;;AAKA,QAAMnB,YAAY,GAAImB,YAAD,IAA0B;AAC7CrE,IAAAA,UAAU,CAACG,SAAX,GAAqBkE,YAArB;AAED,GAHD;;AAIA,QAAMrB,aAAa,GAAIqB,YAAD,IAA0B;AAC9CrE,IAAAA,UAAU,CAACI,UAAX,GAAsBiE,YAAtB;AAED,GAHD;;AAMF,QAAMzB,WAAW,GAAIyB,YAAD,IAA0B;AAC5CrE,IAAAA,UAAU,CAACK,QAAX,GAAoBgE,YAApB;AAED,GAHD;;AAKA,QAAMvB,WAAW,GAAIuB,YAAD,IAA0B;AAC5CrE,IAAAA,UAAU,CAACM,QAAX,GAAoB+D,YAApB;AAED,GAHD;;AAOE,QAAMC,UAAU,GAAID,YAAD,IAAuB;AACxCJ,IAAAA,OAAO,CAACC,GAAR,CAAYlE,UAAZ;AACCuE,IAAAA,KAAK,CAACvE,UAAD,CAAL;AACF,GAHD;;AAKA,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,KAAK,EAAE;AAAEwE,MAAAA,UAAU,EAAE;AAAd,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI/B,UAAU,EADd,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGI,cAAc,EAHjB,EAIGF,cAAc,EAJjB,EAKGP,cAAc,EALjB,EAMGW,gBAAgB,EANnB,EAOGE,eAAe,EAPlB,EAQGE,WAAW,EARd,EASGE,cAAc,EATjB,EAUGE,WAAW,EAVd,eAYE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,OAAjC;AAAyC,IAAA,KAAK,EAAC,SAA/C;AAA4D,IAAA,OAAO,EAAEe,UAArE;AAAiF,IAAA,KAAK,EAAE;AACtFG,MAAAA,KAAK,EAAE,MAD+E;AAEtFC,MAAAA,YAAY,EAAE,MAFwE;AAGtFC,MAAAA,OAAO,EAAE,KAH6E;AAItFC,MAAAA,UAAU,EAAE;AAJ0E,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CADF;AAyBD,CApPD;;AAsPA,eAAepF,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Logo from \"./../../assets/images/LogoGpac.png\"\nimport CustomSelect from \"../CustomSelect\";\nimport useMyStore from \"../../zustand\"\nimport { Divider, Button } from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport customTextField from \"../CustomTextField\";\nimport CustomTextField from \"../CustomTextField\";\nimport { searchMap } from \"../../zustand/types\";\nimport CustomSelectOnChange from \"../CustomSelectOnChange\";\n\nconst [objStore] = useMyStore;\n \nconst InventoryFilters: React.FC<{}> = () => {\nconst Search=objStore(state=>state.searchMap);\n \nconst [search, setSearch] = useState<searchMap | undefined>({\n  activty:0,\n  type:0\n});\n\nconst infoSearch = {\n  activty:0,\n  type:0,\n  coach:0,\n  recluter:0,\n  candidate:0,\n  functional:0,\n  specilty:0,\n  industry:0,\n  state:\"\"\n}\n\n  const arrayActivity = objStore(state => state.activity);\n  const getActivity = objStore(state => state.getActivity);\n  const arrayType = objStore(state => state.type);\n  const getType = objStore(state => state.getType);\n  const arrayIndustry = objStore(state => state.generic);\n  const getGeneric = objStore(state => state.getGeneric);\n  const arraySpecilty= objStore(state => state.specilty);\n  const getGenericSpecilty=objStore(state => state.getSpecilty);\n \n  const arrayFunctional= objStore(state => state.functional);\n  const getFunctional=objStore(state => state.getFunctional);\n  const arrayCandidate= objStore(state => state.candidate);\n  const getCandidate=objStore(state => state.getCandidate);\n  const arrayCoach= objStore(state => state.coach);\n  const getCoach=objStore(state => state.getCoach);\n \n  const arrayRecluiter= objStore(state => state.recluiter);\n  const getRecluter=objStore(state => state.getRecluter);\n\n  const arrayState= objStore(state => state.stated);\n  const getState=objStore(state => state.getStated);\n \n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n\n  const isLoading = objStore(state => state.isLoading);\n  useEffect(() => {\n\n    (async function () {\n      await getActivity();\n      await getType();\n      await getZipcode();\n      await getGeneric(\"Industry\");\n      await getGenericSpecilty(\"specialty\");\n      await getFunctional(\"functional\");\n      await getCandidate(\"candidate_type\");\n      await getCoach(\"coach\");\n      await getRecluter(\"recruiter\");\n      await getState(\"state\");\n    })()\n  },\n    []\n  );\n\n\n\n  const renderActivity = (): undefined | JSX.Element | string => {\n    if (arrayActivity && arrayActivity.contenido.length) {\n      return <CustomSelect contenido={arrayActivity.contenido} catalogo={arrayActivity.catalogo} seleccionadoValor={setActivity} />;\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  const renderType = (): undefined | JSX.Element | string => {\n    if (arrayType && arrayType.contenido.length) {\n      return <CustomSelect contenido={arrayType.contenido} catalogo={arrayType.catalogo} seleccionadoValor={setType} />;\n  \n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  const renderSpecilty = (): undefined | JSX.Element | string => {\n    if (arraySpecilty && arraySpecilty.contenido.length) {\n      return <CustomSelect contenido={arraySpecilty.contenido} catalogo={arraySpecilty.catalogo} seleccionadoValor={setSpecilty} />;\n  \n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  const renderIndustry = (): undefined | JSX.Element | string => {\n    if (arrayIndustry && arrayIndustry.contenido.length) {\n      return <CustomSelect contenido={arrayIndustry.contenido} catalogo={arrayIndustry.catalogo} seleccionadoValor={setIndustry} />;\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  const renderFunctional = (): undefined | JSX.Element | string => {\n    if (arrayFunctional && arrayFunctional.contenido.length) {\n      return <CustomSelect contenido={arrayFunctional.contenido} catalogo={arrayFunctional.catalogo} seleccionadoValor={setFunctional} />;\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  const renderCandidate = (): undefined | JSX.Element | string => {\n    if (arrayCandidate && arrayCandidate.contenido.length) {\n      return <CustomSelect contenido={arrayCandidate.contenido} catalogo={arrayCandidate.catalogo} seleccionadoValor={setCandidate} />;\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  const renderCoach = (): undefined | JSX.Element | string => {\n    if (arrayCoach && arrayCoach.contenido.length) {\n      return <CustomSelect contenido={arrayCoach.contenido} catalogo={arrayCoach.catalogo} seleccionadoValor={setCoach} />;\n   } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  const renderRecluter = (): undefined | JSX.Element | string => {\n    if (arrayRecluiter && arrayRecluiter.contenido.length) {\n      return <CustomSelect contenido={arrayRecluiter.contenido} catalogo={arrayRecluiter.catalogo} seleccionadoValor={setRecluter} />;\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  const renderState = (): undefined | JSX.Element | string => {\n    if (zipCodeArray && zipCodeArray.facet_groups.length) {\n      const zipCode = zipCodeArray.records.map( recorod=> {\n\n        let rObj = {\n          id:recorod.fields.zip,\n          description:recorod.fields.zip\n        }\n \n\n   return rObj\n      \n      });\n      console.log(zipCode);\n      return <CustomSelectOnChange contenido={zipCodeArray.facet_groups} catalogo={\"state\"} seleccionadoValor={setStated} />;\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  const renderZip = (): undefined | JSX.Element | string => {\n    if (zipCodeArray && zipCodeArray.facet_groups.length) {\n      const zipCode = zipCodeArray.records.map( recorod=> {\n\n        let rObj = {\n          id:recorod.fields.zip,\n          description:recorod.fields.zip\n        }\n \n\n   return rObj\n      \n      });\n      console.log(zipCode);\n      return <CustomSelect  contenido={zipCodeArray.records} catalogo={\"zip\"} seleccionadoValor={setStated} />;\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  }\n  \n  const setStated = async (seleccionado: string) => {\n    infoSearch.state=seleccionado;\n  \n     // await getActivity();\n   \n    \n \n  };\n\n  const setActivity = (seleccionado: number) => {\n    infoSearch.activty=seleccionado;\n   \n  };\n   \n  const setType = (seleccionado: number) => {\n    infoSearch.type=seleccionado;\n   \n  };\n   \n  const setCoach = (seleccionado: number) => {\n    infoSearch.coach=seleccionado;\n   \n  };\n   \n  const setRecluter = (seleccionado: number) => {\n    infoSearch.recluter=seleccionado;\n   \n  };\n   \n  const setCandidate = (seleccionado: number) => {\n    infoSearch.candidate=seleccionado;\n   \n  };\n  const setFunctional = (seleccionado: number) => {\n    infoSearch.functional=seleccionado;\n   \n  };\n\n \nconst setSpecilty = (seleccionado: number) => {\n  infoSearch.specilty=seleccionado;\n \n};\n\nconst setIndustry = (seleccionado: number) => {\n  infoSearch.industry=seleccionado;\n \n};\n\n\n  \n  const handleOpen = (seleccionado: any) => {\n    console.log(infoSearch);\n     alert(infoSearch);\n  };\n\n  return (\n    <div id=\"filters\" style={{ borderLeft: \"1px solid grey\" }} >\n       {renderType()}\n      <CustomTextField></CustomTextField>\n      {renderIndustry()}\n      {renderSpecilty()}  \n      {renderActivity()}\n      {renderFunctional()}\n      {renderCandidate()}\n      {renderCoach()}\n      {renderRecluter()}  \n      {renderState()}\n\n      <Button variant=\"contained\" size=\"large\" color=\"primary\"    onClick={handleOpen} style={{\n        width: '100%',\n        borderRadius: '30px',\n        padding: '5px',\n        marginLeft: '3%'\n      }} >\n        SEARCH\n      </Button>\n    </div>\n  );\n\n\n}\n\nexport default InventoryFilters;"]},"metadata":{},"sourceType":"module"}