{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/InventoryFilters/index.tsx\";\nimport React, { useEffect } from \"react\";\nimport CustomSelect from \"../CustomSelect\";\nimport useMyStore from \"../../zustand\";\nconst [objStore] = useMyStore;\n\nconst InventoryFilters = () => {\n  const arrayActivity = objStore(state => state.activity);\n  const getActivity = objStore(state => state.getActivity);\n  const isLoading = objStore(state => state.isLoading);\n  useEffect(() => {\n    (async function () {\n      await getActivity();\n    })();\n  }, []);\n\n  const renderActivity = () => {\n    if (arrayActivity && arrayActivity.length) {\n      return arrayActivity.map((act, index) => /*#__PURE__*/React.createElement(CustomSelect, Object.assign({\n        key: index\n      }, act, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 49\n        }\n      })));\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"filters\",\n    style: {\n      borderLeft: \"1px solid grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, renderActivity());\n};\n\nexport default InventoryFilters;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/InventoryFilters/index.tsx"],"names":["React","useEffect","CustomSelect","useMyStore","objStore","InventoryFilters","arrayActivity","state","activity","getActivity","isLoading","renderActivity","length","map","act","index","borderLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,MAAM,CAACC,QAAD,IAAaD,UAAnB;;AAEA,MAAME,gBAAgC,GAAG,MAAM;AAC7C,QAAMC,aAAa,GAAEF,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA7B;AACA,QAAMC,WAAW,GAACL,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACE,WAAhB,CAA1B;AACA,QAAMC,SAAS,GAAGN,QAAQ,CAACG,KAAK,IAAGA,KAAK,CAACG,SAAf,CAA1B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AAEZ,KAAC,kBAAiB;AACd,YAAMQ,WAAW,EAAjB;AACH,KAFD;AAGH,GALQ,EAMT,EANS,CAAT;;AAWA,QAAME,cAAc,GAAE,MAAsC;AAC1D,QAAGL,aAAa,IAAIA,aAAa,CAACM,MAAlC,EAAyC;AACrC,aAAON,aAAa,CAACO,GAAd,CAAkB,CAACC,GAAD,EAAKC,KAAL,kBAAe,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA;AAAnB,SAA6BD,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjC,CAAP;AACH,KAFD,MAEM,IAAIJ,SAAJ,EAAc;AAChB,aAAO,UAAP;AACH;AACJ,GANC;;AAOE,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,KAAK,EAAE;AAACM,MAAAA,UAAU,EAAC;AAAZ,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEFL,cAAc,EAFZ,CADJ;AASH,CAhCD;;AAkCA,eAAeN,gBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Logo from \"./../../assets/images/LogoGpac.png\"\nimport CustomSelect from \"../CustomSelect\";\nimport useMyStore from \"../../zustand\"\nconst [objStore] = useMyStore;\n \nconst InventoryFilters :  React.FC<{}> = () => {\n  const arrayActivity= objStore(state => state.activity);\n  const getActivity=objStore(state => state.getActivity);\n  const isLoading = objStore(state =>state.isLoading);\n\n  useEffect(() => {\n \n      (async function (){\n          await getActivity();\n      })()\n  }, \n  []\n  );\n\n\n\n  const renderActivity =():undefined| JSX.Element[] | string=>{\n    if(arrayActivity && arrayActivity.length){\n        return arrayActivity.map((act,index )=> <CustomSelect key={index}{...act}/>);\n    }else if (isLoading){\n        return \"Cargando\";\n    }\n}\n    return (\n        <div id=\"filters\" style={{borderLeft:\"1px solid grey\"}} >\n      \n     {renderActivity()}\n      \n        </div>\n    );\n\n\n}\n\nexport default InventoryFilters;"]},"metadata":{},"sourceType":"module"}