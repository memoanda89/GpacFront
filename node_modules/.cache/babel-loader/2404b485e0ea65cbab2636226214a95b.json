{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/GpacFront/src/componets/MapCustom/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport useMyStore from \"../../zustand\";\nimport { Grid, Avatar, Button, makeStyles, createStyles } from \"@material-ui/core\";\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport { green, yellow, red } from \"@material-ui/core/colors\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  yellow: {\n    color: theme.palette.getContrastText(yellow[500]),\n    backgroundColor: yellow[500]\n  },\n  red: {\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500]\n  },\n  green: {\n    color: '#fff',\n    backgroundColor: green[500]\n  }\n}));\nconst [objStore] = useMyStore;\n\nconst MapCustom = () => {\n  const classes = useStyles(); // const [viewport, setViewport] = useState({\n  //   latitude: 40.5360,\n  //   longitude:-94.7522 ,\n  //   width:1030,\n  //   height:800,\n  //   zoom: 2\n  // });\n\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n  const configMapa = objStore(state => state.viewport);\n  const setViewPort = objStore(state => state.setViewPort);\n  const [selectedPark, setSelectedPark] = useState();\n  const [ZipCodeSelected, setSelectedZipCode] = useState();\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n\n    (async function () {\n      await getGpac();\n      await getZipcode();\n    })();\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, [arraygpac]);\n\n  function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, configMapa, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport => {\n      // setViewport(viewport);\n      setViewPort(viewport);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), arraygpac.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: uuidv4(),\n    latitude: park.latitud,\n    longitude: park.longitud,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, (park === null || park === void 0 ? void 0 : park.IdActivity) === 3 ? /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.green,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 36\n    }\n  }) : (park === null || park === void 0 ? void 0 : park.IdActivity) === 4 ? /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.yellow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 44\n    }\n  }, \" \") : /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.red,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }\n  })))), selectedPark ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedPark.latitud,\n    longitude: selectedPark.longitud,\n    onClose: () => {\n      setSelectedPark(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '320px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, selectedPark.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 'lighter'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 18\n    }\n  }, selectedPark.functional))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\\xB7/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, selectedPark.type))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: \"/static/images/avatar/1.jpg\",\n    style: {\n      marginTop: '15px'\n    },\n    alt: \"My Avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Recluter \", selectedPark.recruiter, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 22\n    }\n  }, selectedPark.state))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      background: 'PRIMARY',\n      width: '100%',\n      borderRadius: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"PROFILE\")))))) : null, zipCodeArray.records.map(zipCode => /*#__PURE__*/React.createElement(Marker, {\n    key: zipCode.datasetid,\n    latitude: zipCode.fields.latitude,\n    longitude: zipCode.fields.longitude,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: e => {\n      e.preventDefault();\n      setSelectedZipCode(zipCode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationCity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  })))), ZipCodeSelected ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: ZipCodeSelected.fields.latitude,\n    longitude: ZipCodeSelected.fields.longitude,\n    onClose: () => {\n      setSelectedZipCode(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '320px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, ZipCodeSelected.fields.city, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: 'lighter'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }, ZipCodeSelected.fields.state))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\\xB7/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, \"ALPHA\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: \"/static/images/avatar/1.jpg\",\n    style: {\n      marginTop: '15px'\n    },\n    alt: \"My Avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, \"Adyan Sosa\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }\n  }, \"User Experience Designer\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      background: 'PRIMARY',\n      width: '100%',\n      borderRadius: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, \"PROFILE\")))))) : null));\n};\n\nexport default MapCustom;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/GpacFront/src/componets/MapCustom/index.tsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","useMyStore","Grid","Avatar","Button","makeStyles","createStyles","LocationCity","green","yellow","red","useStyles","theme","root","display","margin","spacing","color","palette","getContrastText","backgroundColor","objStore","MapCustom","classes","arraygpac","state","gpacMapObject","getGpac","getGapMap","zipCodeArray","zipCode","getZipcode","getZipCode","configMapa","viewport","setViewPort","selectedPark","setSelectedPark","ZipCodeSelected","setSelectedZipCode","listener","e","key","undefined","window","addEventListener","removeEventListener","uuidv4","replace","c","r","Math","random","v","toString","map","park","latitud","longitud","preventDefault","IdActivity","width","fontWeight","name","functional","type","marginTop","recruiter","background","borderRadius","records","datasetid","fields","latitude","longitude","city"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport style from '../../assets/css/App.styles'\n\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\n\n\nimport useMyStore from \"../../zustand\"\nimport { Divider, Grid, Avatar, TableBody, TableCell, TableRow, Button, Icon, Theme, makeStyles, createStyles } from \"@material-ui/core\";\n\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport { GpacObj, zipCodeObject } from \"../../zustand/types\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green, pink, yellow, red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    yellow: {\n      color: theme.palette.getContrastText(yellow[500]),\n      backgroundColor: yellow[500],\n    }, red: {\n      color: theme.palette.getContrastText(red[500]),\n      backgroundColor: red[500],\n    },\n    green: {\n      color: '#fff',\n      backgroundColor: green[500],\n    },\n  }),\n);\n\nconst [objStore] = useMyStore;\nconst MapCustom: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  // const [viewport, setViewport] = useState({\n  //   latitude: 40.5360,\n  //   longitude:-94.7522 ,\n  //   width:1030,\n  //   height:800,\n  //   zoom: 2\n  // });\n\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n  const configMapa = objStore(state => state.viewport);\n  const setViewPort = objStore(state => state.setViewPort);\n  const [selectedPark, setSelectedPark] = useState<GpacObj | undefined>();\n\n  const [ZipCodeSelected, setSelectedZipCode] = useState<zipCodeObject | undefined>();\n  useEffect(() => {\n    const listener = (e: { key: string; }) => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n    (async function () {\n      await getGpac();\n      await getZipcode();\n    })()\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, [arraygpac]);\n  function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n  return (\n    <div>\n      <ReactMapGL\n        {...configMapa}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n\n        onViewportChange={viewport => {\n          // setViewport(viewport);\n          setViewPort(viewport);\n        }\n\n        }\n      >\n\n        {arraygpac.map(park => (\n          <Marker\n            key={uuidv4()}\n            latitude={park.latitud}\n            longitude={park.longitud}\n          >\n            <a\n              \n              onClick={e => {\n                e.preventDefault();\n                setSelectedPark(park);\n              }}\n            >\n            {park?.IdActivity===3? <Avatar className={classes.green}>\n       \n      </Avatar> :   park?.IdActivity===4?  <Avatar className={classes.yellow}> </Avatar>\n        \n      :  <Avatar className={classes.red}></Avatar>    }\n            </a>\n          </Marker>\n        )\n        )}\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.latitud}\n            longitude={selectedPark.longitud}\n            onClose={() => {\n              setSelectedPark(undefined);\n            }}\n          >\n            <div>\n\n              <div style={{ width: '320px' }}>\n                <Grid container spacing={1}>\n                  <Grid item xs={8}>\n                    <p style={{ fontWeight: 'bold' }}>{selectedPark.name}\n                  <br />\n                 <span style={{ fontWeight: 'lighter' }}>{selectedPark.functional}</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <p> <a href='·/'>{selectedPark.type}</a></p>\n                  </Grid>\n                  <Grid item xs={2} >\n\n                    <Avatar src=\"/static/images/avatar/1.jpg\" style={{ marginTop: '15px' }} alt=\"My Avatar\" />\n\n                  </Grid>\n                  <Grid item xs={10}>\n                    <p >Recluter {selectedPark.recruiter}\n                  <br />\n                     <span  >{selectedPark.state}</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={5}>\n\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{\n                        background: 'PRIMARY',\n                        width: '100%',\n                        borderRadius: '30px',\n\n\n                      }}\n                    >\n                      PROFILE\n      </Button>\n                  </Grid>\n                </Grid>\n\n              </div>\n            </div>\n          </Popup>\n        ) : null}\n\n        {zipCodeArray.records.map(zipCode => (\n          <Marker\n            key={zipCode.datasetid}\n            latitude={zipCode.fields.latitude}\n            longitude={zipCode.fields.longitude}\n          >\n            <a\n              \n              onClick={e => {\n                e.preventDefault();\n                setSelectedZipCode(zipCode);\n              }}\n            >\n              <LocationCity />\n            </a>\n          </Marker>\n        )\n        )}\n        {ZipCodeSelected ? (\n          <Popup\n            latitude={ZipCodeSelected.fields.latitude}\n            longitude={ZipCodeSelected.fields.longitude}\n            onClose={() => {\n              setSelectedZipCode\n                (undefined);\n            }}\n          >\n            <div>\n\n            <div style={{ width: '320px' }}>\n                <Grid container spacing={1}>\n                  <Grid item xs={9}>\n                    <p style={{ fontWeight: 'bold' }}>{ZipCodeSelected.fields.city}\n                  <br />\n                      <span style={{ fontWeight: 'lighter' }}>{ZipCodeSelected.fields.state}</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <p> <a href='·/'>ALPHA</a></p>\n                  </Grid>\n                  <Grid item xs={2} >\n\n                    <Avatar src=\"/static/images/avatar/1.jpg\" style={{ marginTop: '15px' }} alt=\"My Avatar\" />\n\n                  </Grid>\n                  <Grid item xs={10}>\n                    <p >Adyan Sosa\n                  <br />\n                      <span  >User Experience Designer</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={5}>\n\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{\n                        background: 'PRIMARY',\n                        width: '100%',\n                        borderRadius: '30px',\n                      }}\n                    >\n                      PROFILE\n      </Button>\n                  </Grid>\n                </Grid>\n\n              </div>\n            </div>\n          </Popup>\n        ) : null}    \n\n      </ReactMapGL>\n    </div>\n  );\n\n\n}\n\n\n\nexport default MapCustom;"]},"metadata":{},"sourceType":"module"}