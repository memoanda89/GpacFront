{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport useMyStore from \"../../zustand\";\nimport { Grid } from \"@material-ui/core\";\nimport LocationCity from '@material-ui/icons/LocationCity';\nconst [objStore] = useMyStore;\n\nconst MapCustom = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 45.4211,\n    longitude: -75.6903,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  });\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n  const [selectedPark, setSelectedPark] = useState();\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n\n    (async function () {\n      await getGpac();\n    })();\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport2 => {\n      setViewport({\n        latitude: viewport2.altitude,\n        longitude: viewport2.longitude,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: viewport2.zoom\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), arraygpac.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: park.id,\n    latitude: park.latitud,\n    longitude: park.longitud,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationCity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  })))), selectedPark ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedPark.latitud,\n    longitude: selectedPark.longitud,\n    onClose: () => {\n      setSelectedPark(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  }, selectedPark.name)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, selectedPark.zipCode)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, selectedPark.zipCode)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, selectedPark.zipCode))))) : null));\n};\n\nexport default MapCustom;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","useMyStore","Grid","LocationCity","objStore","MapCustom","viewport","setViewport","latitude","longitude","width","height","zoom","arraygpac","state","gpacMapObject","getGpac","getGapMap","selectedPark","setSelectedPark","listener","e","key","undefined","window","addEventListener","removeEventListener","viewport2","altitude","map","park","id","latitud","longitud","preventDefault","name","zipCode"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport style from '../../assets/css/App.styles'\n\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\n\n\nimport useMyStore from \"../../zustand\"\nimport { Divider, Grid } from \"@material-ui/core\";\n\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport { GpacObj } from \"../../zustand/types\";\n\nconst [objStore] = useMyStore;\nconst MapCustom: React.FC<{}> = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 45.4211,\n    longitude: -75.6903,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  });\n\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n\n  const [selectedPark, setSelectedPark] = useState<GpacObj | undefined>();\n  useEffect(() => {\n    const listener = (e: { key: string; }) => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n    (async function () {\n      await getGpac();\n\n    })()\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n        onViewportChange={viewport2 => {\n          setViewport({\n            latitude: viewport2.altitude,\n            longitude: viewport2.longitude,\n            width: \"100vw\",\n            height: \"100vh\",\n            zoom: viewport2.zoom\n          });\n        }\n\n        }\n      >\n\n        {arraygpac.map(park => (\n          <Marker\n            key={park.id}\n            latitude={park.latitud}\n            longitude={park.longitud}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedPark(park);\n              }}\n            >\n              <LocationCity />\n            </button>\n          </Marker>\n        )\n        )}\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.latitud}\n            longitude={selectedPark.longitud}\n            onClose={() => {\n              setSelectedPark(undefined);\n            }}\n          >\n            <div>\n\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <h2>{selectedPark.name}</h2>\n                </Grid>\n                <Grid item xs={6}>\n                  <p>{selectedPark.zipCode}</p>\n                </Grid>\n                <Grid item xs={6}>\n                  <p>{selectedPark.zipCode}</p>\n                </Grid>\n                <Grid item xs={12}>\n                  <p>{selectedPark.zipCode}</p>\n                </Grid>\n              </Grid>\n\n\n            </div>\n          </Popup>\n        ) : null}\n      </ReactMapGL>\n    </div>\n  );\n\n\n}\n\n\n\nexport default MapCustom;"]},"metadata":{},"sourceType":"module"}