{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport useMyStore from \"../../zustand\";\nimport { Grid, Avatar, Button } from \"@material-ui/core\";\nimport LocationCity from '@material-ui/icons/LocationCity';\nconst [objStore] = useMyStore;\n\nconst MapCustom = () => {\n  // const [viewport, setViewport] = useState({\n  //   latitude: 40.5360,\n  //   longitude:-94.7522 ,\n  //   width:1030,\n  //   height:800,\n  //   zoom: 2\n  // });\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n  const configMapa = objStore(state => state.viewport);\n  const setViewPort = objStore(state => state.setViewPort);\n  const [selectedPark, setSelectedPark] = useState();\n  const [ZipCodeSelected, setSelectedZipCode] = useState();\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n\n    (async function () {\n      await getGpac();\n      await getZipcode();\n    })();\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, [arraygpac]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, configMapa, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport => {\n      // setViewport(viewport);\n      setViewPort(viewport);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), arraygpac.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: park.id,\n    latitude: park.latitud,\n    longitude: park.longitud,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationCity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })))), selectedPark ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: selectedPark.latitud,\n    longitude: selectedPark.longitud,\n    onClose: () => {\n      setSelectedPark(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '320px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 18\n    }\n  }, \"Adyan Sosa\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, \"User Experience Designer\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"ALPHA\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: \"/static/images/avatar/1.jpg\",\n    style: {\n      marginTop: '15px'\n    },\n    alt: \"My Avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 18\n    }\n  }, \"Adyan Sosa\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \"User Experience Designer\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      background: 'PRIMARY',\n      width: '100%',\n      borderRadius: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"PROFILE\")))))) : null, zipCodeArray.records.map(zipCode => /*#__PURE__*/React.createElement(Marker, {\n    key: zipCode.datasetid,\n    latitude: zipCode.fields.latitude,\n    longitude: zipCode.fields.longitude,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault();\n      setSelectedZipCode(zipCode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LocationCity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  })))), ZipCodeSelected ? /*#__PURE__*/React.createElement(Popup, {\n    latitude: ZipCodeSelected.fields.latitude,\n    longitude: ZipCodeSelected.fields.longitude,\n    onClose: () => {\n      setSelectedZipCode(undefined);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 20\n    }\n  }, \"Manager\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"OP\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 18\n    }\n  }, \"Profile\"))))) : null));\n};\n\nexport default MapCustom;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","useMyStore","Grid","Avatar","Button","LocationCity","objStore","MapCustom","arraygpac","state","gpacMapObject","getGpac","getGapMap","zipCodeArray","zipCode","getZipcode","getZipCode","configMapa","viewport","setViewPort","selectedPark","setSelectedPark","ZipCodeSelected","setSelectedZipCode","listener","e","key","undefined","window","addEventListener","removeEventListener","map","park","id","latitud","longitud","preventDefault","width","marginTop","background","borderRadius","records","datasetid","fields","latitude","longitude"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport style from '../../assets/css/App.styles'\n\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\n\n\nimport useMyStore from \"../../zustand\"\nimport { Divider, Grid, Avatar, TableBody, TableCell, TableRow, Button } from \"@material-ui/core\";\n\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport { GpacObj, zipCodeObject } from \"../../zustand/types\";\n\nconst [objStore] = useMyStore;\nconst MapCustom: React.FC<{}> = () => {\n  // const [viewport, setViewport] = useState({\n  //   latitude: 40.5360,\n  //   longitude:-94.7522 ,\n  //   width:1030,\n  //   height:800,\n  //   zoom: 2\n  // });\n\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);  \n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n const configMapa= objStore(state => state.viewport);\n const setViewPort=objStore(state=> state.setViewPort);\n  const [selectedPark, setSelectedPark] = useState<GpacObj | undefined>();\n \n  const [ZipCodeSelected, setSelectedZipCode] = useState<zipCodeObject | undefined>();\n  useEffect(() => {\n    const listener = (e: { key: string; }) => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n    (async function () {\n       await getGpac();\n      await getZipcode();\n    })()\n    window.addEventListener(\"keydown\", listener);\n \n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, [arraygpac]);\n\n  return (\n    <div>\n      <ReactMapGL\n        {...configMapa}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n        \n        onViewportChange={viewport => {\n         // setViewport(viewport);\n         setViewPort(viewport);\n        }\n\n        }\n      >\n\n        {arraygpac.map(park => (\n          <Marker\n            key={park.id}\n            latitude={park.latitud}\n            longitude={park.longitud}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedPark(park);\n              }}\n            >\n              <LocationCity />\n            </button>\n          </Marker>\n        )\n        )}\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.latitud}\n            longitude={selectedPark.longitud}\n            onClose={() => {\n              setSelectedPark(undefined);\n            }}\n          >\n            <div>\n\n              {/* <Grid container spacing={1}>\n                <Grid item xs={12}>\n                  <h5>{selectedPark.name}</h5>\n                  <h5>Manager</h5>\n                </Grid>\n                <Grid item xs={3}>\n                <Avatar >OP</Avatar>\n                </Grid>\n                <Grid item xs={9}>\n                  <p>{selectedPark.zipCode}</p>\n                </Grid>\n                <Grid item xs={12}>\n                 <button>Profile</button>\n                </Grid>\n              </Grid> */}\n              <div style={{width:'320px'}}>\n\n            \n              <Grid container spacing={1}>\n                <Grid item xs={9}>\n                 <p >Adyan Sosa\n                  <br/>\n                  <span  >User Experience Designer</span>\n                  </p> \n                </Grid>\n                <Grid item xs={3}>\n                <p>ALPHA</p>\n                </Grid>\n                <Grid item xs={3} >\n                 \n                <Avatar src=\"/static/images/avatar/1.jpg\" style={{marginTop:'15px'}} alt=\"My Avatar\" />\n             \n                </Grid>\n                <Grid item xs={9}>\n                 <p >Adyan Sosa\n                  <br/>\n                  <span  >User Experience Designer</span>\n                  </p> \n                </Grid>\n                <Grid item xs={5}>\n                 \n                </Grid>\n                <Grid item xs={7}>\n                <Button\n            variant=\"contained\"\n            color=\"primary\"\n             style={{\n              background:'PRIMARY',\n              width: '100%',\n                borderRadius: '30px',\n                \n                 \n             }}\n      >\n        PROFILE\n      </Button>\n                 </Grid>\n                </Grid>\n\n                </div>\n            </div>\n          </Popup>\n        ) : null}\n\n      {zipCodeArray.records.map(zipCode => (\n          <Marker\n            key={zipCode.datasetid}\n            latitude={zipCode.fields.latitude}\n            longitude={zipCode.fields.longitude}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                setSelectedZipCode(zipCode);\n              }}\n            >\n              <LocationCity />\n            </button>\n          </Marker>\n        )\n        )}\n  {ZipCodeSelected ? (\n          <Popup\n            latitude={ZipCodeSelected.fields.latitude}\n            longitude={ZipCodeSelected.fields.longitude}\n            onClose={() => {\n              setSelectedZipCode\n              (undefined);\n            }}\n          >\n            <div>\n\n              <Grid container spacing={1}>\n                <Grid item xs={12}>\n                   <h5>Manager</h5>\n                </Grid>\n                <Grid item xs={3}>\n                <Avatar >OP</Avatar>\n                </Grid>\n                <Grid item xs={9}>\n                  \n                </Grid>\n                <Grid item xs={12}>\n                 <button>Profile</button>\n                </Grid>\n              </Grid>\n\n\n            </div>\n          </Popup>\n        ) : null}\n\n      </ReactMapGL>\n    </div>\n  );\n\n\n}\n\n\n\nexport default MapCustom;"]},"metadata":{},"sourceType":"module"}