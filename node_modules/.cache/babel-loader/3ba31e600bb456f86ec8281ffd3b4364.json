{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/AddModal/index.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Grid, Button, createStyles, makeStyles, TextField } from \"@material-ui/core\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CustomSelect from \"../CustomSelect\";\nimport useMyStore from \"../../zustand\";\nimport { useForm } from \"react-hook-form\";\nconst [objStore] = useMyStore;\nconst useStyles = makeStyles(theme => createStyles({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst AddModal = () => {\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  const arrayActivity = objStore(state => state.activity);\n  const getActivity = objStore(state => state.getActivity);\n  const arrayType = objStore(state => state.type);\n  const getType = objStore(state => state.getType);\n  const isLoading = objStore(state => state.isLoading);\n  ;\n  useEffect(() => {\n    (async function () {\n      await getActivity();\n      await getType();\n    })();\n  }, []);\n\n  const renderActivity = () => {\n    if (arrayActivity && arrayActivity.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, Object.assign({\n        key: 1\n      }, arrayActivity, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }));\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const renderType = () => {\n    if (arrayType && arrayType.contenido.length) {\n      return /*#__PURE__*/React.createElement(CustomSelect, Object.assign({\n        key: 1\n      }, arrayType, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }\n      }));\n    } else if (isLoading) {\n      return \"Cargando\";\n    }\n  };\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\"));\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"imagen\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"example\",\n    id: \"outlined-basic\",\n    label: \"Outlined\",\n    variant: \"outlined\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, renderActivity()), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, renderType()), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"exampleRequired\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 34\n    }\n  }, \"This field is required\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"combo1\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"combo 2\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"nombre\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"combo1\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"combo 2\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Save\"))));\n};\n\nexport default AddModal;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/AddModal/index.tsx"],"names":["React","useEffect","Grid","Button","createStyles","makeStyles","TextField","SaveIcon","CustomSelect","useMyStore","useForm","objStore","useStyles","theme","button","margin","spacing","AddModal","classes","register","handleSubmit","watch","errors","arrayActivity","state","activity","getActivity","arrayType","type","getType","isLoading","renderActivity","contenido","length","renderType","onSubmit","data","console","log","required","exampleRequired"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Grid, Button, createStyles, makeStyles, Theme, TextField } from \"@material-ui/core\";\nimport SaveIcon from '@material-ui/icons/Save';\nimport CustomSelect from \"../CustomSelect\";\nimport useMyStore from \"../../zustand\";\nimport { useForm } from \"react-hook-form\";\n \nconst [objStore] = useMyStore;\nconst useStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  button: {\n    margin: theme.spacing(1),\n  },\n}),\n);\n\ntype Inputs = {\n    example: string,\n    exampleRequired: string,\n  };\n\nconst AddModal :  React.FC<{}> = () => {\n    const classes = useStyles();\n    const { register, handleSubmit, watch, errors } = useForm<Inputs>();\n   \n\n    const arrayActivity= objStore(state => state.activity);\n    const getActivity=objStore(state => state.getActivity);\n    const arrayType= objStore(state => state.type);\n    const getType=objStore(state => state.getType);\n    const isLoading = objStore(state =>state.isLoading);\n    ;\n    useEffect(() => {\n   \n        (async function (){\n            await getActivity();\n            await getType();\n        })()\n    }, \n    []\n    );\n  \n  \n  \n    const renderActivity =():undefined| JSX.Element | string=>{\n       if(arrayActivity && arrayActivity.contenido.length){\n           return <CustomSelect key={1}{...arrayActivity}  />;\n       }else if (isLoading){\n           return \"Cargando\";\n       }\n  }\n        const renderType =():undefined| JSX.Element | string=>{\n            if(arrayType && arrayType.contenido.length){\n                return <CustomSelect key={1}{...arrayType}/>;\n            }else if (isLoading){\n                return \"Cargando\";\n            }\n        }\n        \n  \n        const onSubmit = (data: any) => console.log(data);\n\n        console.log(watch(\"example\")) \n\n\n\n\n    return (\n \n      <form onSubmit={handleSubmit(onSubmit)}>\n          \n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          imagen\n        </Grid>\n        <Grid item xs={4}>\n        <TextField name=\"example\" id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\"   ref={register}/>\n        </Grid>\n        <Grid item xs={4}>\n         {renderActivity() }\n        </Grid>\n        <Grid item xs={4}>\n        {renderType()}\n        </Grid>\n       \n        <Grid item xs={4}>\n        <input name=\"exampleRequired\" ref={register({ required: true })} />\n      {/* errors will return when field validation fails  */}\n      {errors.exampleRequired && <span>This field is required</span>}\n        </Grid>\n        <Grid item xs={4}>\n          combo1\n        </Grid>\n        <Grid item xs={4}>\n          combo 2\n        </Grid>\n       \n        <Grid item xs={4}>\n          nombre\n        </Grid>\n        <Grid item xs={4}>\n          combo1\n        </Grid>\n        <Grid item xs={4}>\n          combo 2\n        </Grid>\n        <Grid item xs={12}>\n        <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        className={classes.button}\n        startIcon={<SaveIcon />}\n      >\n        Save\n      </Button>\n        </Grid>\n        </Grid>\n        </form>\n    );\n\n\n}\n\nexport default AddModal;"]},"metadata":{},"sourceType":"module"}