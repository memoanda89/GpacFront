{"ast":null,"code":"import { fade, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nexport default makeStyles({\n  mainBtn: {\n    width: '300px',\n    marginTop: '12px'\n  },\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  paper: {\n    textAlign: 'center',\n    color: \"red\"\n  },\n  formControl: {\n    minWidth: 120\n  },\n  iconButtonAvatar: {\n    padding: 4\n  },\n  button: {\n    flexGrow: 1\n  },\n  formControl: {\n    minWidth: 120\n  },\n  searchIcon: {\n    padding: Theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: Theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${Theme.spacing(4)}px)`,\n    transition: Theme.transitions.create('width'),\n    width: '100%',\n    [Theme.breakpoints.up('md')]: {\n      width: '20ch'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: Theme.shape.borderRadius,\n    backgroundColor: fade(Theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(Theme.palette.common.white, 0.25)\n    },\n    marginRight: Theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [Theme.breakpoints.up('sm')]: {\n      width: 'auto'\n    }\n  }\n});","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/assets/css/App.styles.jsx"],"names":["fade","makeStyles","Theme","createStyles","mainBtn","width","marginTop","root","flexGrow","title","paper","textAlign","color","formControl","minWidth","iconButtonAvatar","padding","button","searchIcon","spacing","height","position","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","search","borderRadius","shape","backgroundColor","palette","common","white","marginRight","marginLeft"],"mappings":"AACA,SAAUA,IAAV,EAAgBC,UAAhB,EAA4BC,KAA5B,EAAmCC,YAAnC,QAAsD,0BAAtD;AACA,eAAgBF,UAAU,CAAC;AACvBG,EAAAA,OAAO,EAAC;AACNC,IAAAA,KAAK,EAAC,OADA;AAENC,IAAAA,SAAS,EAAC;AAFJ,GADe;AAKnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GALa;AAQnBC,EAAAA,KAAK,EAAE;AACLD,IAAAA,QAAQ,EAAE;AADL,GARY;AAWnBE,EAAAA,KAAK,EAAE;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,KAAK,EAAE;AAHJ,GAXY;AAgBjBC,EAAAA,WAAW,EAAE;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAhBI;AAmBdC,EAAAA,gBAAgB,EAAE;AACnBC,IAAAA,OAAO,EAAE;AADU,GAnBJ;AAqBfC,EAAAA,MAAM,EAAE;AACRT,IAAAA,QAAQ,EAAE;AADF,GArBO;AAuBfK,EAAAA,WAAW,EAAE;AAEbC,IAAAA,QAAQ,EAAE;AAFG,GAvBE;AA0BdI,EAAAA,UAAU,EAAE;AACbF,IAAAA,OAAO,EAAEd,KAAK,CAACiB,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADI;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbC,IAAAA,QAAQ,EAAE,UAHG;AAIbC,IAAAA,aAAa,EAAE,MAJF;AAKbC,IAAAA,OAAO,EAAE,MALI;AAMbC,IAAAA,UAAU,EAAE,QANC;AAObC,IAAAA,cAAc,EAAE;AAPH,GA1BE;AAmCjBC,EAAAA,SAAS,EAAE;AACTd,IAAAA,KAAK,EAAE;AADE,GAnCM;AAsCjBe,EAAAA,UAAU,EAAE;AACVX,IAAAA,OAAO,EAAEd,KAAK,CAACiB,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CADC;AAEV;AACAS,IAAAA,WAAW,EAAG,cAAa1B,KAAK,CAACiB,OAAN,CAAc,CAAd,CAAiB,KAHlC;AAIVU,IAAAA,UAAU,EAAE3B,KAAK,CAAC4B,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,CAJF;AAKV1B,IAAAA,KAAK,EAAE,MALG;AAMV,KAACH,KAAK,CAAC8B,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5B5B,MAAAA,KAAK,EAAE;AADqB;AANpB,GAtCK;AA+Cd6B,EAAAA,MAAM,EAAE;AACTb,IAAAA,QAAQ,EAAE,UADD;AAETc,IAAAA,YAAY,EAAEjC,KAAK,CAACkC,KAAN,CAAYD,YAFjB;AAGTE,IAAAA,eAAe,EAAErC,IAAI,CAACE,KAAK,CAACoC,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B,CAHZ;AAIT,eAAW;AACTH,MAAAA,eAAe,EAAErC,IAAI,CAACE,KAAK,CAACoC,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B;AADZ,KAJF;AAOTC,IAAAA,WAAW,EAAEvC,KAAK,CAACiB,OAAN,CAAc,CAAd,CAPJ;AAQTuB,IAAAA,UAAU,EAAE,CARH;AASTrC,IAAAA,KAAK,EAAE,MATE;AAUT,KAACH,KAAK,CAAC8B,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAE5B5B,MAAAA,KAAK,EAAE;AAFqB;AAVrB;AA/CM,CAAD,CAA1B","sourcesContent":[" \nimport {  fade, makeStyles, Theme, createStyles} from '@material-ui/core/styles';\nexport default  makeStyles({\n    mainBtn:{\n      width:'300px',\n      marginTop:'12px'\n    },\n        root: {\n          flexGrow: 1,\n        },\n        title: {\n          flexGrow: 1,\n        },\n        paper: {\n           \n            textAlign: 'center',\n            color: \"red\",\n          },\n          formControl: {\n         \n            minWidth: 120,\n          }, iconButtonAvatar: {\n            padding: 4,\n          },button: {\n            flexGrow: 1,\n          },formControl: {\n         \n            minWidth: 120,\n          }, searchIcon: {\n            padding: Theme.spacing(0, 2),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          },\n          inputRoot: {\n            color: 'inherit',\n          },\n          inputInput: {\n            padding: Theme.spacing(1, 1, 1, 0),\n            // vertical padding + font size from searchIcon\n            paddingLeft: `calc(1em + ${Theme.spacing(4)}px)`,\n            transition: Theme.transitions.create('width'),\n            width: '100%',\n            [Theme.breakpoints.up('md')]: {\n              width: '20ch',\n            },\n          }, search: {\n            position: 'relative',\n            borderRadius: Theme.shape.borderRadius,\n            backgroundColor: fade(Theme.palette.common.white, 0.15),\n            '&:hover': {\n              backgroundColor: fade(Theme.palette.common.white, 0.25),\n            },\n            marginRight: Theme.spacing(2),\n            marginLeft: 0,\n            width: '100%',\n            [Theme.breakpoints.up('sm')]: {\n              \n              width: 'auto',\n            },\n          },\n    \n  });"]},"metadata":{},"sourceType":"module"}