{"ast":null,"code":"var _jsxFileName = \"/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\nimport * as parkDate from './../../data/skateboard-park.json';\n\nconst MapCustom = () => {\n  const [viewport, setViewport] = useState({\n    latitude: 45.4211,\n    longitude: -75.6903,\n    width: \"100vw\",\n    height: \"100vh\",\n    zoom: 10\n  });\n  const [selectedPark, setSelectedPark] = useState(null);\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: \"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\",\n    mapStyle: \"mapbox://styles/mapbox/streets-v11\",\n    onViewportChange: viewport2 => {\n      setViewport({\n        latitude: viewport2.altitude,\n        longitude: viewport2.longitude,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: viewport2.zoom\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }), parkDate.features.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: park.properties.PARK_ID,\n    latitude: park.geometry.coordinates[1],\n    longitude: park.geometry.coordinates[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"marker-btn\",\n    onClick: e => {\n      e.preventDefault(); //setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/skateboarding.svg\",\n    alt: \"Skate Park Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default MapCustom;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","parkDate","MapCustom","viewport","setViewport","latitude","longitude","width","height","zoom","selectedPark","setSelectedPark","listener","e","key","window","addEventListener","removeEventListener","viewport2","altitude","features","map","park","properties","PARK_ID","geometry","coordinates","preventDefault"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAGA,OAAOC,UAAP,IAAqBC,MAArB,QAA0C,cAA1C;AACA,OAAO,KAAKC,QAAZ,MAA0B,mCAA1B;;AACI,MAAMC,SAAyB,GAAG,MAAM;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,QAAQ,EAAE,OAD6B;AAEvCC,IAAAA,SAAS,EAAE,CAAC,OAF2B;AAGvCC,IAAAA,KAAK,EAAE,OAHgC;AAIvCC,IAAAA,MAAM,EAAE,OAJ+B;AAKvCC,IAAAA,IAAI,EAAE;AALiC,GAAD,CAAxC;AAOA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,IAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,QAAQ,GAAIC,CAAD,IAAyB;AACxC,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACtBH,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,KAJD;;AAKAI,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,QAAnC;AAEA,WAAO,MAAM;AACXG,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCL,QAAtC;AACD,KAFD;AAGD,GAXQ,EAWN,EAXM,CAAT;AAaM,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD,oBACFT,QADE;AAEN,IAAA,oBAAoB,EAAC,mGAFf;AAGN,IAAA,QAAQ,EAAC,oCAHH;AAIN,IAAA,gBAAgB,EAAGe,SAAS,IAAG;AAC5Bd,MAAAA,WAAW,CAAC;AACXC,QAAAA,QAAQ,EAAEa,SAAS,CAACC,QADT;AAEXb,QAAAA,SAAS,EAAEY,SAAS,CAACZ,SAFV;AAGXC,QAAAA,KAAK,EAAE,OAHI;AAIXC,QAAAA,MAAM,EAAE,OAJG;AAKXC,QAAAA,IAAI,EAAES,SAAS,CAACT;AALL,OAAD,CAAX;AAOF,KAZK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBRR,QAAQ,CAACmB,QAAT,CAAkBC,GAAlB,CAAsBC,IAAI,iBACtB,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,UAAL,CAAgBC,OADvB;AAEE,IAAA,QAAQ,EAAEF,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAFZ;AAGE,IAAA,SAAS,EAAEJ,IAAI,CAACG,QAAL,CAAcC,WAAd,CAA0B,CAA1B,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,OAAO,EAAEb,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACc,cAAF,GADY,CAEZ;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAK,IAAA,GAAG,EAAC,oBAAT;AAA8B,IAAA,GAAG,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,CADJ,CAhBQ,CADA,CADF;AAuDX,CA9EG;;AAkFJ,eAAezB,SAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport style from '../../assets/css/App.styles'  \n \nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\nimport * as parkDate from './../../data/skateboard-park.json';\n    const MapCustom :  React.FC<{}> = () => {\n      const [viewport, setViewport] = useState({\n        latitude: 45.4211,\n        longitude: -75.6903,\n        width: \"100vw\",\n        height: \"100vh\",\n        zoom: 10\n      });\n      const [selectedPark, setSelectedPark] = useState(null);\n    \n      useEffect(() => {\n        const listener = (e: { key: string; }) => {\n          if (e.key === \"Escape\") {\n            setSelectedPark(null);\n          }\n        };\n        window.addEventListener(\"keydown\", listener);\n    \n        return () => {\n          window.removeEventListener(\"keydown\", listener);\n        };\n      }, []);\n     \n            return (\n              <div>\n              <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n        onViewportChange={ viewport2 =>{\n           setViewport({\n            latitude: viewport2.altitude,\n            longitude: viewport2.longitude,\n            width: \"100vw\",\n            height: \"100vh\",\n            zoom: viewport2.zoom\n           });\n        }\n\n        }\n      >\n     {parkDate.features.map(park => (\n          <Marker\n            key={park.properties.PARK_ID}\n            latitude={park.geometry.coordinates[1]}\n            longitude={park.geometry.coordinates[0]}\n          >\n            <button\n              className=\"marker-btn\"\n              onClick={e => {\n                e.preventDefault();\n                //setSelectedPark(park);\n              }}\n            >\n              <img src=\"/skateboarding.svg\" alt=\"Skate Park Icon\" />\n            </button>\n          </Marker>\n        ))}\n{/* \n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.geometry.coordinates[1]}\n            longitude={selectedPark.geometry.coordinates[0]}\n            onClose={() => {\n              setSelectedPark(null);\n            }}\n          >\n            <div>\n              <h2>{selectedPark.properties.NAME}</h2>\n              <p>{selectedPark.properties.DESCRIPTIO}</p>\n            </div>\n          </Popup>\n        ) : null} */}\n      </ReactMapGL>\n            </div>\n            );\n          \n\n}\n\n\n\nexport default MapCustom;"]},"metadata":{},"sourceType":"module"}