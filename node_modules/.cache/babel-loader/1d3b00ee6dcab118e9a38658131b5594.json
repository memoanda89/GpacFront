{"ast":null,"code":"import _regeneratorRuntime from\"/Users/memopro/Documents/source/react/gpac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/memopro/Documents/source/react/gpac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/memopro/Documents/source/react/gpac/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import ReactMapGL,{Marker,Popup}from\"react-map-gl\";import useMyStore from\"../../zustand\";import{Grid,Avatar,Button,makeStyles,createStyles}from\"@material-ui/core\";import LocationCity from'@material-ui/icons/LocationCity';import{green,yellow,red}from\"@material-ui/core/colors\";var useStyles=makeStyles(function(theme){return createStyles({root:{display:'flex','& > *':{margin:theme.spacing(1)}},yellow:{color:theme.palette.getContrastText(yellow[500]),backgroundColor:yellow[500]},red:{color:theme.palette.getContrastText(red[500]),backgroundColor:red[500]},green:{color:'#fff',backgroundColor:green[500]}});});var _useMyStore=_slicedToArray(useMyStore,1),objStore=_useMyStore[0];var MapCustom=function MapCustom(){var classes=useStyles();// const [viewport, setViewport] = useState({\n//   latitude: 40.5360,\n//   longitude:-94.7522 ,\n//   width:1030,\n//   height:800,\n//   zoom: 2\n// });\nvar arraygpac=objStore(function(state){return state.gpacMapObject;});var getGpac=objStore(function(state){return state.getGapMap;});var zipCodeArray=objStore(function(state){return state.zipCode;});var getZipcode=objStore(function(state){return state.getZipCode;});var configMapa=objStore(function(state){return state.viewport;});var setViewPort=objStore(function(state){return state.setViewPort;});var _useState=useState(),_useState2=_slicedToArray(_useState,2),selectedPark=_useState2[0],setSelectedPark=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),ZipCodeSelected=_useState4[0],setSelectedZipCode=_useState4[1];useEffect(function(){var listener=function listener(e){if(e.key===\"Escape\"){setSelectedPark(undefined);}};_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getGpac();case 2:_context.next=4;return getZipcode();case 4:case\"end\":return _context.stop();}}},_callee);}))();window.addEventListener(\"keydown\",listener);return function(){window.removeEventListener(\"keydown\",listener);};},[arraygpac]);function uuidv4(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c=='x'?r:r&0x3|0x8;return v.toString(16);});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(ReactMapGL,Object.assign({},configMapa,{mapboxApiAccessToken:\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\",mapStyle:\"mapbox://styles/mapbox/streets-v11\",onViewportChange:function onViewportChange(viewport){// setViewport(viewport);\nsetViewPort(viewport);}}),arraygpac.map(function(park){return/*#__PURE__*/React.createElement(Marker,{key:uuidv4(),latitude:park.latitud,longitude:park.longitud},/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(e){e.preventDefault();setSelectedPark(park);}},(park===null||park===void 0?void 0:park.IdActivity)===4?/*#__PURE__*/React.createElement(Avatar,{className:classes.green}):(park===null||park===void 0?void 0:park.IdActivity)===3?/*#__PURE__*/React.createElement(Avatar,{className:classes.red}):/*#__PURE__*/React.createElement(Avatar,{className:classes.yellow},\" \")));}),selectedPark?/*#__PURE__*/React.createElement(Popup,{latitude:selectedPark.latitud,longitude:selectedPark.longitud,onClose:function onClose(){setSelectedPark(undefined);}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{width:'320px'}},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:9},/*#__PURE__*/React.createElement(\"p\",{style:{fontWeight:'bold'}},selectedPark.name,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{style:{fontWeight:'lighter'}},selectedPark.id))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(\"p\",null,\" \",/*#__PURE__*/React.createElement(\"a\",{href:\"\\xB7/\"},\"ALPHA\"))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(Avatar,{src:\"/static/images/avatar/1.jpg\",style:{marginTop:'15px'},alt:\"My Avatar\"})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:10},/*#__PURE__*/React.createElement(\"p\",null,\"Adyan Sosa\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",null,\"User Experience Designer\"))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:5}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:7},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",style:{background:'PRIMARY',width:'100%',borderRadius:'30px'}},\"PROFILE\")))))):null,zipCodeArray.records.map(function(zipCode){return/*#__PURE__*/React.createElement(Marker,{key:zipCode.datasetid,latitude:zipCode.fields.latitude,longitude:zipCode.fields.longitude},/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(e){e.preventDefault();setSelectedZipCode(zipCode);}},/*#__PURE__*/React.createElement(LocationCity,null)));}),ZipCodeSelected?/*#__PURE__*/React.createElement(Popup,{latitude:ZipCodeSelected.fields.latitude,longitude:ZipCodeSelected.fields.longitude,onClose:function onClose(){setSelectedZipCode(undefined);}},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{style:{width:'320px'}},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:9},/*#__PURE__*/React.createElement(\"p\",{style:{fontWeight:'bold'}},ZipCodeSelected.fields.city,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{style:{fontWeight:'lighter'}},ZipCodeSelected.fields.state))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:3},/*#__PURE__*/React.createElement(\"p\",null,\" \",/*#__PURE__*/React.createElement(\"a\",{href:\"\\xB7/\"},\"ALPHA\"))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(Avatar,{src:\"/static/images/avatar/1.jpg\",style:{marginTop:'15px'},alt:\"My Avatar\"})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:10},/*#__PURE__*/React.createElement(\"p\",null,\"Adyan Sosa\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",null,\"User Experience Designer\"))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:5}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:7},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",style:{background:'PRIMARY',width:'100%',borderRadius:'30px'}},\"PROFILE\")))))):null));};export default MapCustom;","map":{"version":3,"sources":["/Users/memopro/Documents/source/react/gpac/src/componets/MapCustom/index.tsx"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","useMyStore","Grid","Avatar","Button","makeStyles","createStyles","LocationCity","green","yellow","red","useStyles","theme","root","display","margin","spacing","color","palette","getContrastText","backgroundColor","objStore","MapCustom","classes","arraygpac","state","gpacMapObject","getGpac","getGapMap","zipCodeArray","zipCode","getZipcode","getZipCode","configMapa","viewport","setViewPort","selectedPark","setSelectedPark","ZipCodeSelected","setSelectedZipCode","listener","e","key","undefined","window","addEventListener","removeEventListener","uuidv4","replace","c","r","Math","random","v","toString","map","park","latitud","longitud","preventDefault","IdActivity","width","fontWeight","name","id","marginTop","background","borderRadius","records","datasetid","fields","latitude","longitude","city"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport style from '../../assets/css/App.styles'\n\nimport ReactMapGL, { Marker, Popup } from \"react-map-gl\";\n\n\nimport useMyStore from \"../../zustand\"\nimport { Divider, Grid, Avatar, TableBody, TableCell, TableRow, Button, Icon, Theme, makeStyles, createStyles } from \"@material-ui/core\";\n\nimport LocationCity from '@material-ui/icons/LocationCity';\nimport { GpacObj, zipCodeObject } from \"../../zustand/types\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport { green, pink, yellow, red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n    yellow: {\n      color: theme.palette.getContrastText(yellow[500]),\n      backgroundColor: yellow[500],\n    }, red: {\n      color: theme.palette.getContrastText(red[500]),\n      backgroundColor: red[500],\n    },\n    green: {\n      color: '#fff',\n      backgroundColor: green[500],\n    },\n  }),\n);\n\nconst [objStore] = useMyStore;\nconst MapCustom: React.FC<{}> = () => {\n  const classes = useStyles();\n\n  // const [viewport, setViewport] = useState({\n  //   latitude: 40.5360,\n  //   longitude:-94.7522 ,\n  //   width:1030,\n  //   height:800,\n  //   zoom: 2\n  // });\n\n  const arraygpac = objStore(state => state.gpacMapObject);\n  const getGpac = objStore(state => state.getGapMap);\n  const zipCodeArray = objStore(state => state.zipCode);\n  const getZipcode = objStore(state => state.getZipCode);\n  const configMapa = objStore(state => state.viewport);\n  const setViewPort = objStore(state => state.setViewPort);\n  const [selectedPark, setSelectedPark] = useState<GpacObj | undefined>();\n\n  const [ZipCodeSelected, setSelectedZipCode] = useState<zipCodeObject | undefined>();\n  useEffect(() => {\n    const listener = (e: { key: string; }) => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(undefined);\n      }\n    };\n    (async function () {\n      await getGpac();\n      await getZipcode();\n    })()\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, [arraygpac]);\n  function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n  return (\n    <div>\n      <ReactMapGL\n        {...configMapa}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZ3VpbGxlcm1vYW5kYSIsImEiOiJja2JiNHVyMjYwMHlvMnNueGY3aDRlcG00In0.5JlHUpgSA1la6mjvYycTMQ\"\n        mapStyle='mapbox://styles/mapbox/streets-v11'\n\n        onViewportChange={viewport => {\n          // setViewport(viewport);\n          setViewPort(viewport);\n        }\n\n        }\n      >\n\n        {arraygpac.map(park => (\n          <Marker\n            key={uuidv4()}\n            latitude={park.latitud}\n            longitude={park.longitud}\n          >\n            <a\n              \n              onClick={e => {\n                e.preventDefault();\n                setSelectedPark(park);\n              }}\n            >\n            {park?.IdActivity===4? <Avatar className={classes.green}>\n       \n      </Avatar> :   park?.IdActivity===3? <Avatar className={classes.red}>\n        \n      </Avatar> :    <Avatar className={classes.yellow}> </Avatar>  }\n            </a>\n          </Marker>\n        )\n        )}\n        {selectedPark ? (\n          <Popup\n            latitude={selectedPark.latitud}\n            longitude={selectedPark.longitud}\n            onClose={() => {\n              setSelectedPark(undefined);\n            }}\n          >\n            <div>\n\n              <div style={{ width: '320px' }}>\n                <Grid container spacing={1}>\n                  <Grid item xs={9}>\n                    <p style={{ fontWeight: 'bold' }}>{selectedPark.name}\n                  <br />\n          <span style={{ fontWeight: 'lighter' }}>{selectedPark.id}</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <p> <a href='·/'>ALPHA</a></p>\n                  </Grid>\n                  <Grid item xs={2} >\n\n                    <Avatar src=\"/static/images/avatar/1.jpg\" style={{ marginTop: '15px' }} alt=\"My Avatar\" />\n\n                  </Grid>\n                  <Grid item xs={10}>\n                    <p >Adyan Sosa\n                  <br />\n                      <span  >User Experience Designer</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={5}>\n\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{\n                        background: 'PRIMARY',\n                        width: '100%',\n                        borderRadius: '30px',\n\n\n                      }}\n                    >\n                      PROFILE\n      </Button>\n                  </Grid>\n                </Grid>\n\n              </div>\n            </div>\n          </Popup>\n        ) : null}\n\n        {zipCodeArray.records.map(zipCode => (\n          <Marker\n            key={zipCode.datasetid}\n            latitude={zipCode.fields.latitude}\n            longitude={zipCode.fields.longitude}\n          >\n            <a\n              \n              onClick={e => {\n                e.preventDefault();\n                setSelectedZipCode(zipCode);\n              }}\n            >\n              <LocationCity />\n            </a>\n          </Marker>\n        )\n        )}\n        {ZipCodeSelected ? (\n          <Popup\n            latitude={ZipCodeSelected.fields.latitude}\n            longitude={ZipCodeSelected.fields.longitude}\n            onClose={() => {\n              setSelectedZipCode\n                (undefined);\n            }}\n          >\n            <div>\n\n            <div style={{ width: '320px' }}>\n                <Grid container spacing={1}>\n                  <Grid item xs={9}>\n                    <p style={{ fontWeight: 'bold' }}>{ZipCodeSelected.fields.city}\n                  <br />\n                      <span style={{ fontWeight: 'lighter' }}>{ZipCodeSelected.fields.state}</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <p> <a href='·/'>ALPHA</a></p>\n                  </Grid>\n                  <Grid item xs={2} >\n\n                    <Avatar src=\"/static/images/avatar/1.jpg\" style={{ marginTop: '15px' }} alt=\"My Avatar\" />\n\n                  </Grid>\n                  <Grid item xs={10}>\n                    <p >Adyan Sosa\n                  <br />\n                      <span  >User Experience Designer</span>\n                    </p>\n                  </Grid>\n                  <Grid item xs={5}>\n\n                  </Grid>\n                  <Grid item xs={7}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{\n                        background: 'PRIMARY',\n                        width: '100%',\n                        borderRadius: '30px',\n                      }}\n                    >\n                      PROFILE\n      </Button>\n                  </Grid>\n                </Grid>\n\n              </div>\n            </div>\n          </Popup>\n        ) : null}    \n\n      </ReactMapGL>\n    </div>\n  );\n\n\n}\n\n\n\nexport default MapCustom;"]},"metadata":{},"sourceType":"module"}